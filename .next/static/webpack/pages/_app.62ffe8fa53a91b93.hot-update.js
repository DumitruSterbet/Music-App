"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/lib/actions/playlist.action.js":
/*!********************************************!*\
  !*** ./src/lib/actions/playlist.action.js ***!
  \********************************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAddTrackToMyPlaylist: function() { return /* binding */ useAddTrackToMyPlaylist; },\n/* harmony export */   useCreateMyPlaylist: function() { return /* binding */ useCreateMyPlaylist; },\n/* harmony export */   useEditMyPlaylist: function() { return /* binding */ useEditMyPlaylist; },\n/* harmony export */   useFetchFavouritePlaylist: function() { return /* binding */ useFetchFavouritePlaylist; },\n/* harmony export */   useFetchMyPlaylist: function() { return /* binding */ useFetchMyPlaylist; },\n/* harmony export */   useFetchMyPlaylists: function() { return /* binding */ useFetchMyPlaylists; },\n/* harmony export */   useFetchRecentPlayed: function() { return /* binding */ useFetchRecentPlayed; },\n/* harmony export */   useListFavouritePlaylist: function() { return /* binding */ useListFavouritePlaylist; },\n/* harmony export */   useRemoveFavouritePlaylist: function() { return /* binding */ useRemoveFavouritePlaylist; },\n/* harmony export */   useRemoveMyPlaylist: function() { return /* binding */ useRemoveMyPlaylist; },\n/* harmony export */   useRemoveTrackFromMyPlaylist: function() { return /* binding */ useRemoveTrackFromMyPlaylist; },\n/* harmony export */   useSaveFavouritePlaylist: function() { return /* binding */ useSaveFavouritePlaylist; },\n/* harmony export */   useSaveRecentPlayed: function() { return /* binding */ useSaveRecentPlayed; }\n/* harmony export */ });\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! uuid */ \"./node_modules/uuid/dist/esm-browser/index.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @tanstack/react-query */ \"./node_modules/@tanstack/react-query/build/modern/index.js\");\n/* harmony import */ var _firebase_firestore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/firestore */ \"./node_modules/@firebase/firestore/dist/index.esm2017.js\");\n/* harmony import */ var _lib_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/store */ \"./src/lib/store.js\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../lib/utils */ \"./src/lib/utils.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../lib/helpers */ \"./src/lib/helpers.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../hooks */ \"./src/hooks/index.js\");\n/* harmony import */ var _editorial_action__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./editorial.action */ \"./src/lib/actions/editorial.action.js\");\n/* eslint-disable react-hooks/exhaustive-deps */ /* eslint-disable react-hooks/rules-of-hooks */ var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$(), _s5 = $RefreshSig$(), _s6 = $RefreshSig$(), _s7 = $RefreshSig$(), _s8 = $RefreshSig$(), _s9 = $RefreshSig$(), _s10 = $RefreshSig$(), _s11 = $RefreshSig$(), _s12 = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n// recent played\nconst useSaveRecentPlayed = ()=>{\n    _s();\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient)();\n    const { mutate: saveRecentPlayed } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation)({\n        mutationFn: async (playlist)=>{\n            if (userId) {\n                try {\n                    const recentPlayedRef = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbGetDoc)({\n                        collection: \"recentPlayed\",\n                        id: userId\n                    });\n                    if (recentPlayedRef.exists()) {\n                        const { playlist_ids } = recentPlayedRef.data() || {};\n                        const notInArray = (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.elementInArray)(playlist_ids, playlist);\n                        if (!notInArray) {\n                            const playlistIdsData = [\n                                playlist,\n                                ...playlist_ids\n                            ].slice(0, 6);\n                            await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbUpdateDoc)({\n                                collection: \"recentPlayed\",\n                                id: userId,\n                                data: {\n                                    playlist_ids: playlistIdsData\n                                }\n                            });\n                        }\n                    } else {\n                        await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbSetDoc)({\n                            collection: \"recentPlayed\",\n                            id: userId,\n                            data: {\n                                user_id: userId,\n                                playlist_ids: (0,_firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.arrayUnion)(playlist),\n                                created_at: (0,_firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)()\n                            }\n                        });\n                    }\n                } catch (error) {\n                // console.log(error);\n                }\n            } else {\n                throw new Error(\"invalid params\");\n            }\n        },\n        onSuccess: ()=>{\n            queryClient.invalidateQueries({\n                queryKey: [\n                    \"recentPlayed\"\n                ]\n            });\n        }\n    });\n    return {\n        saveRecentPlayed\n    };\n};\n_s(useSaveRecentPlayed, \"Z0OMtHhAP/kxsKesxPRZVrQlTs8=\", false, function() {\n    return [\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation\n    ];\n});\nconst useFetchRecentPlayed = ()=>{\n    _s1();\n    const { currentUser } = (0,_lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser)();\n    const { userId: userId1 } = currentUser || {};\n    const { isPending, isSuccess, isError, isFetching, error, data } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQuery)({\n        queryKey: [\n            \"recentPlayed\",\n            {\n                userId: userId1\n            }\n        ],\n        queryFn: async ()=>{\n            if (userId1) {\n                try {\n                    const recentPlayedRef = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbGetDoc)({\n                        collection: \"recentPlayed\",\n                        id: userId1\n                    });\n                    if (recentPlayedRef.exists()) {\n                        const data = recentPlayedRef.data().playlist_ids;\n                        return await (0,_editorial_action__WEBPACK_IMPORTED_MODULE_6__.fetchMultiplePlaylists)(data);\n                    } else {\n                        return null;\n                    }\n                } catch (error) {\n                // console.log(error);\n                }\n            } else {\n                return null;\n            // throw new Error(\"Invalid userId\");\n            }\n        }\n    });\n    return {\n        isPending,\n        isSuccess,\n        isError,\n        isFetching,\n        error,\n        data\n    };\n};\n_s1(useFetchRecentPlayed, \"4lOyKRJjeHYU6OlXBQ+5LHv3laA=\", false, function() {\n    return [\n        _lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQuery\n    ];\n});\n// fetch playlists\nconst useFetchMyPlaylists = ()=>{\n    _s2();\n    const { currentUser } = (0,_lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser)();\n    const { userId: userId1 } = currentUser || {};\n    const { isPending, isSuccess, isError, isFetching, error, data } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQuery)({\n        queryKey: [\n            \"myPlaylists\",\n            {\n                userId: userId1,\n                navigate\n            }\n        ],\n        queryFn: async ()=>{\n            if (userId1) {\n                try {\n                    const myPlaylistsRef = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbGetCollection)({\n                        collection: \"myPlaylists\",\n                        whereQueries: [\n                            [\n                                \"user_id\",\n                                \"==\",\n                                userId1\n                            ]\n                        ],\n                        orderByQueries: [\n                            [\n                                \"created_at\",\n                                \"desc\"\n                            ]\n                        ]\n                    });\n                    return myPlaylistsRef.docs.map((i)=>{\n                        const s = i.data();\n                        return {\n                            ...s,\n                            id: i.id,\n                            created_at: s.created_at.toDate()\n                        };\n                    });\n                } catch (error) {\n                // console.log(error);\n                }\n            } else {\n                return null;\n            // throw new Error(\"invalid params\");\n            }\n        }\n    });\n    return {\n        isPending,\n        isSuccess,\n        isError,\n        isFetching,\n        error,\n        data\n    };\n};\n_s2(useFetchMyPlaylists, \"4lOyKRJjeHYU6OlXBQ+5LHv3laA=\", false, function() {\n    return [\n        _lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQuery\n    ];\n});\n// playlist CRUD\nconst useCreateMyPlaylist = ()=>{\n    _s3();\n    const { currentUser } = (0,_lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser)();\n    const { userId: userId1 } = currentUser || {};\n    const [notify] = (0,_hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification)();\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient)();\n    const { mutate: createMyPlaylist, isPending: isCreating } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation)({\n        mutationFn: async ()=>{\n            if (userId1) {\n                try {\n                    const countMyPlaylist = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbCountCollection)({\n                        collection: \"myPlaylists\",\n                        whereQueries: [\n                            [\n                                \"user_id\",\n                                \"==\",\n                                userId1\n                            ]\n                        ]\n                    });\n                    const docRef = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbAddDoc)({\n                        collection: \"myPlaylists\",\n                        data: {\n                            user_id: userId1,\n                            desc: \"Here is an optional description\",\n                            title: \"My Playlist #\".concat(countMyPlaylist + 1),\n                            track_ids: [],\n                            image_url: null,\n                            created_at: (0,_firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)()\n                        }\n                    });\n                } catch (error) {\n                    notify({\n                        title: \"Error\",\n                        variant: \"error\",\n                        description: \"Request failed\"\n                    });\n                // console.log(error);\n                }\n            } else {\n                throw new Error(\"Invalid params\");\n            }\n        },\n        onSuccess: ()=>{\n            queryClient.invalidateQueries({\n                queryKey: [\n                    \"myPlaylists\"\n                ]\n            });\n        }\n    });\n    return {\n        createMyPlaylist,\n        isCreating\n    };\n};\n_s3(useCreateMyPlaylist, \"EERodkJi/2kjAbV4zm5S+md54Y8=\", false, function() {\n    return [\n        _lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser,\n        _hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation\n    ];\n});\nconst useFetchMyPlaylist = (id)=>{\n    _s4();\n    const { currentUser } = (0,_lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser)();\n    const { userId: userId1 } = currentUser || {};\n    const [notify] = (0,_hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification)();\n    const { isPending, isSuccess, isError, isFetching, error, data } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQuery)({\n        queryKey: [\n            \"singleMyPlaylist_\".concat(id),\n            {\n                userId: userId1,\n                id\n            }\n        ],\n        queryFn: async ()=>{\n            if (userId1) {\n                try {\n                    const singlePlaylist = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbGetDoc)({\n                        collection: \"myPlaylists\",\n                        id\n                    });\n                    const { track_ids } = singlePlaylist.data() || {};\n                    let playlistDetails = singlePlaylist.data();\n                    playlistDetails = {\n                        ...playlistDetails,\n                        id: singlePlaylist.id,\n                        created_at: playlistDetails.created_at.toDate()\n                    };\n                    if (track_ids === null || track_ids === void 0 ? void 0 : track_ids.length) {\n                        const tracks = await (0,_editorial_action__WEBPACK_IMPORTED_MODULE_6__.fetchMultiplePlaylists)(track_ids);\n                        return {\n                            playlistDetails,\n                            playlistTracks: tracks\n                        };\n                    } else {\n                        return {\n                            playlistDetails,\n                            playlistTracks: []\n                        };\n                    }\n                } catch (error) {\n                    notify({\n                        title: \"Error\",\n                        variant: \"error\",\n                        description: \"Request failed\"\n                    });\n                // console.log(error);\n                }\n            } else {\n                throw new Error(\"Invalid params\");\n            }\n        }\n    });\n    return {\n        isPending,\n        isSuccess,\n        isError,\n        isFetching,\n        error,\n        data\n    };\n};\n_s4(useFetchMyPlaylist, \"ansTaF3w1zVEQRWUXTHkvxq/RUI=\", false, function() {\n    return [\n        _lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser,\n        _hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQuery\n    ];\n});\nconst useEditMyPlaylist = ()=>{\n    _s5();\n    const { currentUser } = (0,_lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser)();\n    const { userId: userId1 } = currentUser || {};\n    const [notify] = (0,_hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification)();\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient)();\n    const { mutate: editMyPlaylist, isPending: isEditing, isSuccess: isEdited } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation)({\n        mutationFn: async (values)=>{\n            const { id, title, desc, files, imagePath } = values;\n            if (userId1) {\n                try {\n                    let imageUrl = null;\n                    let pathUrl = null;\n                    if (files) {\n                        pathUrl = imagePath || (0,uuid__WEBPACK_IMPORTED_MODULE_8__.v4)();\n                        imageUrl = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.uploadImage)({\n                            imageFile: files[0],\n                            storagePath: \"myPlaylists/\".concat(pathUrl),\n                            fileName: \"image.jpg\"\n                        });\n                    }\n                    await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbUpdateDoc)({\n                        data: {\n                            title,\n                            desc,\n                            ...files ? {\n                                image_url: imageUrl,\n                                image_path: pathUrl\n                            } : {}\n                        },\n                        collection: \"myPlaylists\",\n                        id\n                    });\n                    notify({\n                        title: \"Success\",\n                        variant: \"success\",\n                        description: \"Details successfully edited\"\n                    });\n                } catch (error) {\n                    notify({\n                        title: \"Error\",\n                        variant: \"error\",\n                        description: \"Request failed\"\n                    });\n                }\n            } else {\n                throw new Error(\"invalid params\");\n            }\n        },\n        onSuccess: (_, variables)=>{\n            queryClient.invalidateQueries({\n                queryKey: [\n                    \"singleMyPlaylist_\".concat(variables === null || variables === void 0 ? void 0 : variables.id)\n                ]\n            });\n        }\n    });\n    return {\n        editMyPlaylist,\n        isEditing,\n        isEdited\n    };\n};\n_s5(useEditMyPlaylist, \"MnF8UeuZXhysTWWF2N5ql2kmaAI=\", false, function() {\n    return [\n        _lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser,\n        _hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation\n    ];\n});\nconst useRemoveMyPlaylist = ()=>{\n    _s6();\n    const { currentUser } = (0,_lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser)();\n    const { userId: userId1 } = currentUser || {};\n    //const navigate = useNavigate();\n    const [notify] = (0,_hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification)();\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient)();\n    const { mutate: deleteMyPlaylist, isPending: isRemoving } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation)({\n        mutationFn: async (id)=>{\n            if (userId1) {\n                try {\n                    var _playlist_data;\n                    const playlist = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbGetDoc)({\n                        collection: \"myPlaylists\",\n                        id\n                    });\n                    const filePath = playlist === null || playlist === void 0 ? void 0 : (_playlist_data = playlist.data()) === null || _playlist_data === void 0 ? void 0 : _playlist_data.image_path;\n                    await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbDeleteDoc)({\n                        collection: \"myPlaylists\",\n                        id\n                    });\n                    if (filePath) {\n                        await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbDeleteStorage)(\"myPlaylists/\".concat(filePath, \"/image.jpg\"));\n                    }\n                    // navigate(\"/my-playlist\");\n                    notify({\n                        title: \"Success\",\n                        variant: \"success\",\n                        description: \"Deleted from playlist\"\n                    });\n                    return null;\n                } catch (error) {\n                    notify({\n                        title: \"Error\",\n                        variant: \"error\",\n                        description: \"An error occurred while deleting\"\n                    });\n                // console.log(error);\n                }\n            } else {\n                throw new Error(\"invalid error\");\n            }\n        },\n        onSuccess: ()=>{\n            queryClient.invalidateQueries({\n                queryKey: [\n                    \"myPlaylists\"\n                ]\n            });\n        }\n    });\n    return {\n        deleteMyPlaylist,\n        isRemoving\n    };\n};\n_s6(useRemoveMyPlaylist, \"iXk9TXuEn4RP/9mZm2ahMrHWIB8=\", false, function() {\n    return [\n        _lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser,\n        _hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation\n    ];\n});\n// add/remove tracks to/from a playlist\nconst useAddTrackToMyPlaylist = ()=>{\n    _s7();\n    const { currentUser } = (0,_lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser)();\n    const { userId: userId1 } = currentUser || {};\n    const [notify] = (0,_hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification)();\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient)();\n    const { mutate: createMyPlaylist, isPending: isCreating } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation)({\n        mutationFn: async (param)=>{\n            let { trackD, id, imageUrl } = param;\n            if (userId1) {\n                try {\n                    const addTrackRef = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbGetDoc)({\n                        collection: \"myPlaylists\",\n                        id\n                    });\n                    if (addTrackRef.exists()) {\n                        const { track_ids, image_url } = addTrackRef.data();\n                        const notInArray = (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.elementInArray)(track_ids, trackD);\n                        if (!notInArray) {\n                            const trackIdsData = [\n                                trackD,\n                                ...track_ids\n                            ].slice(0, 10);\n                            await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbUpdateDoc)({\n                                data: {\n                                    track_ids: trackIdsData,\n                                    image_url: image_url || imageUrl\n                                },\n                                collection: \"myPlaylists\",\n                                id\n                            });\n                            notify({\n                                title: \"Success\",\n                                variant: \"success\",\n                                description: \"Added to playlist\"\n                            });\n                        }\n                    }\n                } catch (error) {\n                    notify({\n                        title: \"Error\",\n                        variant: \"error\",\n                        description: \"An error occurred while adding\"\n                    });\n                // console.log(error);\n                }\n            }\n        },\n        onSuccess: (_, variables)=>{\n            queryClient.invalidateQueries({\n                queryKey: [\n                    \"singleMyPlaylist_\".concat(variables.id)\n                ]\n            });\n        }\n    });\n    return {\n        createMyPlaylist,\n        isCreating\n    };\n};\n_s7(useAddTrackToMyPlaylist, \"EERodkJi/2kjAbV4zm5S+md54Y8=\", false, function() {\n    return [\n        _lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser,\n        _hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation\n    ];\n});\nconst useRemoveTrackFromMyPlaylist = ()=>{\n    _s8();\n    const { currentUser } = (0,_lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser)();\n    const { userId: userId1 } = currentUser || {};\n    const [notify] = (0,_hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification)();\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient)();\n    const { mutate: deleteTrackFromMyPlaylist, isPending: isRemoving } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation)({\n        mutationFn: async (param)=>{\n            let { trackD, id } = param;\n            if (userId1) {\n                try {\n                    await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbUpdateDoc)({\n                        data: {\n                            track_ids: (0,_firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.arrayRemove)(trackD)\n                        },\n                        collection: \"myPlaylists\",\n                        id\n                    });\n                    notify({\n                        title: \"Success\",\n                        variant: \"success\",\n                        description: \"Deleted from playlist\"\n                    });\n                    return null;\n                } catch (error) {\n                    notify({\n                        title: \"Error\",\n                        variant: \"error\",\n                        description: \"An error occurred while deleting\"\n                    });\n                // console.log(error);\n                }\n            } else {\n                throw new Error(\"Invalid params\");\n            }\n        },\n        onSuccess: (_, variables)=>{\n            queryClient.invalidateQueries({\n                queryKey: [\n                    \"singleMyPlaylist_\".concat(variables.id)\n                ]\n            });\n        }\n    });\n    return {\n        deleteTrackFromMyPlaylist,\n        isRemoving\n    };\n};\n_s8(useRemoveTrackFromMyPlaylist, \"uj/JmGvXmJw/LUdvyQLawvRX73w=\", false, function() {\n    return [\n        _lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser,\n        _hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation\n    ];\n});\n// favourites playlists CRUD\nconst useSaveFavouritePlaylist = ()=>{\n    _s9();\n    const { currentUser } = (0,_lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser)();\n    const { userId: userId1 } = currentUser || {};\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient)();\n    const [notify] = (0,_hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification)();\n    const { mutate: saveFavouritePlaylist } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation)({\n        mutationFn: async (playlist)=>{\n            if (userId1) {\n                try {\n                    const favouritePlaylistsRef = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbGetDoc)({\n                        collection: \"favouritePlaylists\",\n                        id: userId1\n                    });\n                    if (favouritePlaylistsRef.exists()) {\n                        const { playlist_ids } = favouritePlaylistsRef.data() || {};\n                        const notInArray = (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.elementInArray)(playlist_ids, playlist);\n                        if (!notInArray) {\n                            const playlistIdsData = [\n                                playlist,\n                                ...playlist_ids\n                            ].slice(0, 10);\n                            await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbUpdateDoc)({\n                                collection: \"favouritePlaylists\",\n                                id: userId1,\n                                data: {\n                                    playlist_ids: playlistIdsData\n                                }\n                            });\n                        }\n                    } else {\n                        await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbSetDoc)({\n                            collection: \"favouritePlaylists\",\n                            id: userId1,\n                            data: {\n                                user_id: userId1,\n                                playlist_ids: (0,_firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.arrayUnion)(playlist),\n                                created_at: (0,_firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)()\n                            }\n                        });\n                    }\n                    notify({\n                        title: \"Success\",\n                        variant: \"success\",\n                        description: \"Favourite playlist added\"\n                    });\n                } catch (error) {\n                // console.log(error);\n                }\n            }\n        },\n        onSuccess: ()=>{\n            queryClient.invalidateQueries({\n                queryKey: [\n                    \"listFavouritePlaylists\"\n                ]\n            });\n            queryClient.invalidateQueries({\n                queryKey: [\n                    \"favouritePlaylists\"\n                ]\n            });\n        }\n    });\n    return {\n        saveFavouritePlaylist\n    };\n};\n_s9(useSaveFavouritePlaylist, \"7mzlyLG+5Ka47Dsb2hyQZZ8LTkc=\", false, function() {\n    return [\n        _lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient,\n        _hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation\n    ];\n});\nconst useFetchFavouritePlaylist = ()=>{\n    _s10();\n    const { currentUser } = (0,_lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser)();\n    const { userId: userId1 } = currentUser || {};\n    const { isPending, isSuccess, isError, isFetching, error, data } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQuery)({\n        queryKey: [\n            \"favouritePlaylists\",\n            {\n                userId: userId1\n            }\n        ],\n        queryFn: async ()=>{\n            if (userId1) {\n                try {\n                    const favPlaylistsRef = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbGetDoc)({\n                        collection: \"favouritePlaylists\",\n                        id: userId1\n                    });\n                    const { playlist_ids } = (favPlaylistsRef === null || favPlaylistsRef === void 0 ? void 0 : favPlaylistsRef.data()) || {};\n                    if (favPlaylistsRef.exists() && (playlist_ids === null || playlist_ids === void 0 ? void 0 : playlist_ids.length)) {\n                        return await (0,_editorial_action__WEBPACK_IMPORTED_MODULE_6__.fetchMultiplePlaylists)(playlist_ids);\n                    } else {\n                        return null;\n                    }\n                } catch (error) {\n                // console.log(error);\n                }\n            } else {\n                throw new Error(\"Invalid userId\");\n            }\n        }\n    });\n    return {\n        isPending,\n        isSuccess,\n        isError,\n        isFetching,\n        error,\n        data\n    };\n};\n_s10(useFetchFavouritePlaylist, \"4lOyKRJjeHYU6OlXBQ+5LHv3laA=\", false, function() {\n    return [\n        _lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQuery\n    ];\n});\nconst useListFavouritePlaylist = ()=>{\n    _s11();\n    const { currentUser } = (0,_lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser)();\n    const { userId: userId1 } = currentUser || {};\n    const { isPending, isSuccess, isError, isFetching, error, data } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQuery)({\n        queryKey: [\n            \"listFavouritePlaylists\",\n            {\n                userId: userId1\n            }\n        ],\n        queryFn: async ()=>{\n            if (userId1) {\n                try {\n                    const favPlaylistsRef = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbGetDoc)({\n                        collection: \"favouritePlaylists\",\n                        id: userId1\n                    });\n                    const id = favPlaylistsRef === null || favPlaylistsRef === void 0 ? void 0 : favPlaylistsRef.id;\n                    const { playlist_ids } = (favPlaylistsRef === null || favPlaylistsRef === void 0 ? void 0 : favPlaylistsRef.data()) || {};\n                    const favouriteplaylistList = playlist_ids === null || playlist_ids === void 0 ? void 0 : playlist_ids.reduce((acc, item)=>{\n                        acc.push(Object.keys(item)[0]);\n                        return acc;\n                    }, []);\n                    return {\n                        favouriteplaylistList,\n                        favouriteplaylistId: id\n                    };\n                } catch (error) {\n                // console.log(error);\n                }\n            } else {\n                throw new Error(\"Invalid userId\");\n            }\n        }\n    });\n    return {\n        isPending,\n        isSuccess,\n        isError,\n        isFetching,\n        error,\n        data\n    };\n};\n_s11(useListFavouritePlaylist, \"4lOyKRJjeHYU6OlXBQ+5LHv3laA=\", false, function() {\n    return [\n        _lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQuery\n    ];\n});\nconst useRemoveFavouritePlaylist = ()=>{\n    _s12();\n    const { currentUser } = (0,_lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser)();\n    const { userId: userId1 } = currentUser || {};\n    const [notify] = (0,_hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification)();\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient)();\n    const { mutate: removeFavouritePlaylist } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation)({\n        mutationFn: async (params)=>{\n            const { playlistD, id } = params;\n            if (userId1) {\n                try {\n                    await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbUpdateDoc)({\n                        data: {\n                            playlist_ids: (0,_firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.arrayRemove)(playlistD)\n                        },\n                        collection: \"favouritePlaylists\",\n                        id\n                    });\n                    notify({\n                        title: \"Success\",\n                        variant: \"success\",\n                        description: \"Favourite playlist removed\"\n                    });\n                } catch (error) {\n                    notify({\n                        title: \"Error\",\n                        variant: \"error\",\n                        description: \"An error occurred while deleting\"\n                    });\n                // console.log(error)\n                }\n            }\n        },\n        onSuccess: ()=>{\n            queryClient.invalidateQueries({\n                queryKey: [\n                    \"listFavouritePlaylists\"\n                ]\n            });\n            queryClient.invalidateQueries({\n                queryKey: [\n                    \"favouritePlaylists\"\n                ]\n            });\n        }\n    });\n    return {\n        removeFavouritePlaylist\n    };\n};\n_s12(useRemoveFavouritePlaylist, \"Dny8in924+/X5c1GLAxlXqpMgg4=\", false, function() {\n    return [\n        _lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser,\n        _hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation\n    ];\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = __webpack_module__.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                __webpack_module__.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                __webpack_module__.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        __webpack_module__.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    __webpack_module__.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGliL2FjdGlvbnMvcGxheWxpc3QuYWN0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSw4Q0FBOEMsR0FDOUMsNkNBQTZDO0FBQ0U7QUFDWDtBQUMwQztBQUNDO0FBRTlCO0FBQ0E7QUFXdEI7QUFDYTtBQUNNO0FBRWM7QUFFNUQsZ0JBQWdCO0FBQ1QsTUFBTXVCLHNCQUFzQjs7SUFHakMsTUFBTUMsY0FBY25CLHFFQUFjQTtJQUVsQyxNQUFNLEVBQUVvQixRQUFRQyxnQkFBZ0IsRUFBRSxHQUFHdkIsa0VBQVdBLENBQUM7UUFDL0N3QixZQUFZLE9BQU9DO1lBQ2pCLElBQUlDLFFBQVE7Z0JBQ1YsSUFBSTtvQkFDRixNQUFNQyxrQkFBa0IsTUFBTWpCLHNEQUFRQSxDQUFDO3dCQUNyQ2tCLFlBQVk7d0JBQ1pDLElBQUlIO29CQUNOO29CQUVBLElBQUlDLGdCQUFnQkcsTUFBTSxJQUFJO3dCQUM1QixNQUFNLEVBQUVDLFlBQVksRUFBRSxHQUFHSixnQkFBZ0JLLElBQUksTUFBTSxDQUFDO3dCQUNwRCxNQUFNQyxhQUFhMUIsMERBQWNBLENBQUN3QixjQUFjTjt3QkFDaEQsSUFBSSxDQUFDUSxZQUFZOzRCQUNmLE1BQU1DLGtCQUFrQjtnQ0FBQ1Q7bUNBQWFNOzZCQUFhLENBQUNJLEtBQUssQ0FBQyxHQUFHOzRCQUU3RCxNQUFNeEIseURBQVdBLENBQUM7Z0NBQ2hCaUIsWUFBWTtnQ0FDWkMsSUFBSUg7Z0NBQ0pNLE1BQU07b0NBQ0pELGNBQWNHO2dDQUNoQjs0QkFDRjt3QkFDRjtvQkFDRixPQUFPO3dCQUNMLE1BQU0xQixzREFBUUEsQ0FBQzs0QkFDYm9CLFlBQVk7NEJBQ1pDLElBQUlIOzRCQUNKTSxNQUFNO2dDQUNKSSxTQUFTVjtnQ0FDVEssY0FBYzNCLCtEQUFVQSxDQUFDcUI7Z0NBQ3pCWSxZQUFZaEMsb0VBQWVBOzRCQUM3Qjt3QkFDRjtvQkFDRjtnQkFDRixFQUFFLE9BQU9pQyxPQUFPO2dCQUNkLHNCQUFzQjtnQkFDeEI7WUFDRixPQUFPO2dCQUNMLE1BQU0sSUFBSUMsTUFBTTtZQUNsQjtRQUNGO1FBQ0FDLFdBQVc7WUFDVG5CLFlBQVlvQixpQkFBaUIsQ0FBQztnQkFBRUMsVUFBVTtvQkFBQztpQkFBZTtZQUFDO1FBQzdEO0lBQ0Y7SUFFQSxPQUFPO1FBQ0xuQjtJQUNGO0FBQ0YsRUFBRTtHQXREV0g7O1FBR1NsQixpRUFBY0E7UUFFR0YsOERBQVdBOzs7QUFtRDNDLE1BQU0yQyx1QkFBdUI7O0lBQ2xDLE1BQU0sRUFBRUMsV0FBVyxFQUFFLEdBQUd0QywwREFBY0E7SUFDdEMsTUFBTSxFQUFFb0IsUUFBQUEsT0FBTSxFQUFFLEdBQUdrQixlQUFlLENBQUM7SUFFbkMsTUFBTSxFQUFFQyxTQUFTLEVBQUVDLFNBQVMsRUFBRUMsT0FBTyxFQUFFQyxVQUFVLEVBQUVWLEtBQUssRUFBRU4sSUFBSSxFQUFFLEdBQUcvQiwrREFBUUEsQ0FBQztRQUMxRXlDLFVBQVU7WUFBQztZQUFnQjtnQkFBRWhCLFFBQUFBO1lBQU87U0FBRTtRQUN0Q3VCLFNBQVM7WUFDUCxJQUFJdkIsU0FBUTtnQkFDVixJQUFJO29CQUNGLE1BQU1DLGtCQUFrQixNQUFNakIsc0RBQVFBLENBQUM7d0JBQ3JDa0IsWUFBWTt3QkFDWkMsSUFBSUg7b0JBQ047b0JBRUEsSUFBSUMsZ0JBQWdCRyxNQUFNLElBQUk7d0JBQzVCLE1BQU1FLE9BQU9MLGdCQUFnQkssSUFBSSxHQUFHRCxZQUFZO3dCQUNoRCxPQUFPLE1BQU1aLHlFQUFzQkEsQ0FBQ2E7b0JBQ3RDLE9BQU87d0JBQ0wsT0FBTztvQkFDVDtnQkFDRixFQUFFLE9BQU9NLE9BQU87Z0JBQ2Qsc0JBQXNCO2dCQUN4QjtZQUNGLE9BQU87Z0JBQ0wsT0FBTztZQUNQLHFDQUFxQztZQUN2QztRQUNGO0lBQ0Y7SUFFQSxPQUFPO1FBQUVPO1FBQVdDO1FBQVdDO1FBQVNDO1FBQVlWO1FBQU9OO0lBQUs7QUFDbEUsRUFBRTtJQS9CV1c7O1FBQ2FyQyxzREFBY0E7UUFHNkJMLDJEQUFRQTs7O0FBNkI3RSxrQkFBa0I7QUFFWCxNQUFNaUQsc0JBQXNCOztJQUNqQyxNQUFNLEVBQUVOLFdBQVcsRUFBRSxHQUFHdEMsMERBQWNBO0lBQ3RDLE1BQU0sRUFBRW9CLFFBQUFBLE9BQU0sRUFBRSxHQUFHa0IsZUFBZSxDQUFDO0lBSW5DLE1BQU0sRUFBRUMsU0FBUyxFQUFFQyxTQUFTLEVBQUVDLE9BQU8sRUFBRUMsVUFBVSxFQUFFVixLQUFLLEVBQUVOLElBQUksRUFBRSxHQUFHL0IsK0RBQVFBLENBQUM7UUFDMUV5QyxVQUFVO1lBQUM7WUFBZTtnQkFBRWhCLFFBQUFBO2dCQUFReUI7WUFBUztTQUFFO1FBQy9DRixTQUFTO1lBQ1AsSUFBSXZCLFNBQVE7Z0JBQ1YsSUFBSTtvQkFDRixNQUFNMEIsaUJBQWlCLE1BQU12Qyw2REFBZUEsQ0FBQzt3QkFDM0NlLFlBQVk7d0JBQ1p5QixjQUFjOzRCQUFDO2dDQUFDO2dDQUFXO2dDQUFNM0I7NkJBQU87eUJBQUM7d0JBQ3pDNEIsZ0JBQWdCOzRCQUFDO2dDQUFDO2dDQUFjOzZCQUFPO3lCQUFDO29CQUMxQztvQkFFQSxPQUFPRixlQUFlRyxJQUFJLENBQUNDLEdBQUcsQ0FBQyxDQUFDQzt3QkFDOUIsTUFBTUMsSUFBSUQsRUFBRXpCLElBQUk7d0JBQ2hCLE9BQU87NEJBQUUsR0FBRzBCLENBQUM7NEJBQUU3QixJQUFJNEIsRUFBRTVCLEVBQUU7NEJBQUVRLFlBQVlxQixFQUFFckIsVUFBVSxDQUFDc0IsTUFBTTt3QkFBRztvQkFDN0Q7Z0JBQ0YsRUFBRSxPQUFPckIsT0FBTztnQkFFZCxzQkFBc0I7Z0JBQ3hCO1lBQ0YsT0FBTztnQkFDTCxPQUFPO1lBQ1AscUNBQXFDO1lBQ3ZDO1FBQ0Y7SUFDRjtJQUVBLE9BQU87UUFBRU87UUFBV0M7UUFBV0M7UUFBU0M7UUFBWVY7UUFBT047SUFBSztBQUNsRSxFQUFFO0lBakNXa0I7O1FBQ2E1QyxzREFBY0E7UUFLNkJMLDJEQUFRQTs7O0FBNkI3RSxnQkFBZ0I7QUFFVCxNQUFNMkQsc0JBQXNCOztJQUNqQyxNQUFNLEVBQUVoQixXQUFXLEVBQUUsR0FBR3RDLDBEQUFjQTtJQUN0QyxNQUFNLEVBQUVvQixRQUFBQSxPQUFNLEVBQUUsR0FBR2tCLGVBQWUsQ0FBQztJQUduQyxNQUFNLENBQUNpQixPQUFPLEdBQUczQyx1REFBZUE7SUFFaEMsTUFBTUcsY0FBY25CLHFFQUFjQTtJQUVsQyxNQUFNLEVBQUVvQixRQUFRd0MsZ0JBQWdCLEVBQUVqQixXQUFXa0IsVUFBVSxFQUFFLEdBQUcvRCxrRUFBV0EsQ0FBQztRQUN0RXdCLFlBQVk7WUFDVixJQUFJRSxTQUFRO2dCQUNWLElBQUk7b0JBQ0YsTUFBTXNDLGtCQUFrQixNQUFNbEQsK0RBQWlCQSxDQUFDO3dCQUM5Q2MsWUFBWTt3QkFDWnlCLGNBQWM7NEJBQUM7Z0NBQUM7Z0NBQVc7Z0NBQU0zQjs2QkFBTzt5QkFBQztvQkFDM0M7b0JBRUEsTUFBTXVDLFNBQVMsTUFBTXhELHNEQUFRQSxDQUFDO3dCQUM1Qm1CLFlBQVk7d0JBQ1pJLE1BQU07NEJBQ0pJLFNBQVNWOzRCQUNUd0MsTUFBTTs0QkFDTkMsT0FBTyxnQkFBb0MsT0FBcEJILGtCQUFrQjs0QkFDekNJLFdBQVcsRUFBRTs0QkFDYkMsV0FBVzs0QkFDWGhDLFlBQVloQyxvRUFBZUE7d0JBQzdCO29CQUNGO2dCQUdGLEVBQUUsT0FBT2lDLE9BQU87b0JBQ2R1QixPQUFPO3dCQUNMTSxPQUFPO3dCQUNQRyxTQUFTO3dCQUNUQyxhQUFhO29CQUNmO2dCQUNBLHNCQUFzQjtnQkFDeEI7WUFDRixPQUFPO2dCQUNMLE1BQU0sSUFBSWhDLE1BQU07WUFDbEI7UUFDRjtRQUNBQyxXQUFXO1lBQ1RuQixZQUFZb0IsaUJBQWlCLENBQUM7Z0JBQUVDLFVBQVU7b0JBQUM7aUJBQWM7WUFBQztRQUM1RDtJQUNGO0lBRUEsT0FBTztRQUNMb0I7UUFDQUM7SUFDRjtBQUNGLEVBQUU7SUFwRFdIOztRQUNhdEQsc0RBQWNBO1FBSXJCWSxtREFBZUE7UUFFWmhCLGlFQUFjQTtRQUUwQkYsOERBQVdBOzs7QUE2Q2xFLE1BQU13RSxxQkFBcUIsQ0FBQzNDOztJQUNqQyxNQUFNLEVBQUVlLFdBQVcsRUFBRSxHQUFHdEMsMERBQWNBO0lBQ3RDLE1BQU0sRUFBRW9CLFFBQUFBLE9BQU0sRUFBRSxHQUFHa0IsZUFBZSxDQUFDO0lBRW5DLE1BQU0sQ0FBQ2lCLE9BQU8sR0FBRzNDLHVEQUFlQTtJQUdoQyxNQUFNLEVBQUUyQixTQUFTLEVBQUVDLFNBQVMsRUFBRUMsT0FBTyxFQUFFQyxVQUFVLEVBQUVWLEtBQUssRUFBRU4sSUFBSSxFQUFFLEdBQUcvQiwrREFBUUEsQ0FBQztRQUMxRXlDLFVBQVU7WUFBRSxvQkFBc0IsT0FBSGI7WUFBTTtnQkFBRUgsUUFBQUE7Z0JBQVFHO1lBQUc7U0FBRTtRQUNwRG9CLFNBQVM7WUFDUCxJQUFJdkIsU0FBUTtnQkFDVixJQUFJO29CQUNGLE1BQU0rQyxpQkFBaUIsTUFBTS9ELHNEQUFRQSxDQUFDO3dCQUNwQ2tCLFlBQVk7d0JBQ1pDO29CQUNGO29CQUVBLE1BQU0sRUFBRXVDLFNBQVMsRUFBRSxHQUFHSyxlQUFlekMsSUFBSSxNQUFNLENBQUM7b0JBRWhELElBQUkwQyxrQkFBa0JELGVBQWV6QyxJQUFJO29CQUV6QzBDLGtCQUFrQjt3QkFDaEIsR0FBR0EsZUFBZTt3QkFDbEI3QyxJQUFJNEMsZUFBZTVDLEVBQUU7d0JBQ3JCUSxZQUFZcUMsZ0JBQWdCckMsVUFBVSxDQUFDc0IsTUFBTTtvQkFDL0M7b0JBRUEsSUFBSVMsc0JBQUFBLGdDQUFBQSxVQUFXTyxNQUFNLEVBQUU7d0JBQ3JCLE1BQU1DLFNBQVMsTUFBTXpELHlFQUFzQkEsQ0FBQ2lEO3dCQUU1QyxPQUFPOzRCQUNMTTs0QkFDQUcsZ0JBQWdCRDt3QkFDbEI7b0JBQ0YsT0FBTzt3QkFDTCxPQUFPOzRCQUNMRjs0QkFDQUcsZ0JBQWdCLEVBQUU7d0JBQ3BCO29CQUNGO2dCQUNGLEVBQUUsT0FBT3ZDLE9BQU87b0JBQ2R1QixPQUFPO3dCQUNMTSxPQUFPO3dCQUNQRyxTQUFTO3dCQUNUQyxhQUFhO29CQUNmO2dCQUVBLHNCQUFzQjtnQkFDeEI7WUFDRixPQUFPO2dCQUNMLE1BQU0sSUFBSWhDLE1BQU07WUFDbEI7UUFDRjtJQUNGO0lBRUEsT0FBTztRQUFFTTtRQUFXQztRQUFXQztRQUFTQztRQUFZVjtRQUFPTjtJQUFLO0FBQ2xFLEVBQUU7SUF4RFd3Qzs7UUFDYWxFLHNEQUFjQTtRQUdyQlksbURBQWVBO1FBR21DakIsMkRBQVFBOzs7QUFtRHRFLE1BQU02RSxvQkFBb0I7O0lBQy9CLE1BQU0sRUFBRWxDLFdBQVcsRUFBRSxHQUFHdEMsMERBQWNBO0lBQ3RDLE1BQU0sRUFBRW9CLFFBQUFBLE9BQU0sRUFBRSxHQUFHa0IsZUFBZSxDQUFDO0lBRW5DLE1BQU0sQ0FBQ2lCLE9BQU8sR0FBRzNDLHVEQUFlQTtJQUNoQyxNQUFNRyxjQUFjbkIscUVBQWNBO0lBRWxDLE1BQU0sRUFDSm9CLFFBQVF5RCxjQUFjLEVBQ3RCbEMsV0FBV21DLFNBQVMsRUFDcEJsQyxXQUFXbUMsUUFBUSxFQUNwQixHQUFHakYsa0VBQVdBLENBQUM7UUFDZHdCLFlBQVksT0FBTzBEO1lBQ2pCLE1BQU0sRUFBRXJELEVBQUUsRUFBRXNDLEtBQUssRUFBRUQsSUFBSSxFQUFFaUIsS0FBSyxFQUFFQyxTQUFTLEVBQUUsR0FBR0Y7WUFFOUMsSUFBSXhELFNBQVE7Z0JBQ1YsSUFBSTtvQkFDRixJQUFJMkQsV0FBVztvQkFDZixJQUFJQyxVQUFVO29CQUNkLElBQUlILE9BQU87d0JBQ1RHLFVBQVVGLGFBQWFyRix3Q0FBTUE7d0JBRTdCc0YsV0FBVyxNQUFNdEUseURBQVdBLENBQUM7NEJBQzNCd0UsV0FBV0osS0FBSyxDQUFDLEVBQUU7NEJBQ25CSyxhQUFhLGVBQXVCLE9BQVJGOzRCQUM1QkcsVUFBVTt3QkFDWjtvQkFDRjtvQkFFQSxNQUFNOUUseURBQVdBLENBQUM7d0JBQ2hCcUIsTUFBTTs0QkFDSm1DOzRCQUNBRDs0QkFDQSxHQUFJaUIsUUFBUTtnQ0FBRWQsV0FBV2dCO2dDQUFVSyxZQUFZSjs0QkFBUSxJQUFJLENBQUMsQ0FBQzt3QkFDL0Q7d0JBQ0ExRCxZQUFZO3dCQUNaQztvQkFDRjtvQkFFQWdDLE9BQU87d0JBQ0xNLE9BQU87d0JBQ1BHLFNBQVM7d0JBQ1RDLGFBQWE7b0JBQ2Y7Z0JBQ0YsRUFBRSxPQUFPakMsT0FBTztvQkFDZHVCLE9BQU87d0JBQ0xNLE9BQU87d0JBQ1BHLFNBQVM7d0JBQ1RDLGFBQWE7b0JBQ2Y7Z0JBQ0Y7WUFDRixPQUFPO2dCQUNMLE1BQU0sSUFBSWhDLE1BQU07WUFDbEI7UUFDRjtRQUNBQyxXQUFXLENBQUNtRCxHQUFHQztZQUNidkUsWUFBWW9CLGlCQUFpQixDQUFDO2dCQUM1QkMsVUFBVTtvQkFBRSxvQkFBaUMsT0FBZGtELHNCQUFBQSxnQ0FBQUEsVUFBVy9ELEVBQUU7aUJBQUc7WUFDakQ7UUFDRjtJQUNGO0lBRUEsT0FBTztRQUNMa0Q7UUFDQUM7UUFDQUM7SUFDRjtBQUNGLEVBQUU7SUFuRVdIOztRQUNheEUsc0RBQWNBO1FBR3JCWSxtREFBZUE7UUFDWmhCLGlFQUFjQTtRQU05QkYsOERBQVdBOzs7QUEwRFYsTUFBTTZGLHNCQUFzQjs7SUFDakMsTUFBTSxFQUFFakQsV0FBVyxFQUFFLEdBQUd0QywwREFBY0E7SUFDdEMsTUFBTSxFQUFFb0IsUUFBQUEsT0FBTSxFQUFFLEdBQUdrQixlQUFlLENBQUM7SUFFbkMsaUNBQWlDO0lBQ2pDLE1BQU0sQ0FBQ2lCLE9BQU8sR0FBRzNDLHVEQUFlQTtJQUVoQyxNQUFNRyxjQUFjbkIscUVBQWNBO0lBRWxDLE1BQU0sRUFBRW9CLFFBQVF3RSxnQkFBZ0IsRUFBRWpELFdBQVdrRCxVQUFVLEVBQUUsR0FBRy9GLGtFQUFXQSxDQUFDO1FBQ3RFd0IsWUFBWSxPQUFPSztZQUNqQixJQUFJSCxTQUFRO2dCQUNWLElBQUk7d0JBR2VEO29CQUZqQixNQUFNQSxXQUFXLE1BQU1mLHNEQUFRQSxDQUFDO3dCQUFFa0IsWUFBWTt3QkFBZUM7b0JBQUc7b0JBRWhFLE1BQU1tRSxXQUFXdkUscUJBQUFBLGdDQUFBQSxpQkFBQUEsU0FBVU8sSUFBSSxnQkFBZFAscUNBQUFBLGVBQWtCaUUsVUFBVTtvQkFDN0MsTUFBTTlFLHlEQUFXQSxDQUFDO3dCQUFFZ0IsWUFBWTt3QkFBZUM7b0JBQUc7b0JBQ2xELElBQUltRSxVQUFVO3dCQUNaLE1BQU1oRiw2REFBZUEsQ0FBQyxlQUF3QixPQUFUZ0YsVUFBUztvQkFDaEQ7b0JBRUQsNEJBQTRCO29CQUUzQm5DLE9BQU87d0JBQ0xNLE9BQU87d0JBQ1BHLFNBQVM7d0JBQ1RDLGFBQWE7b0JBQ2Y7b0JBQ0EsT0FBTztnQkFDVCxFQUFFLE9BQU9qQyxPQUFPO29CQUNkdUIsT0FBTzt3QkFDTE0sT0FBTzt3QkFDUEcsU0FBUzt3QkFDVEMsYUFBYTtvQkFDZjtnQkFDQSxzQkFBc0I7Z0JBQ3hCO1lBQ0YsT0FBTztnQkFDTCxNQUFNLElBQUloQyxNQUFNO1lBQ2xCO1FBQ0Y7UUFDQUMsV0FBVztZQUNUbkIsWUFBWW9CLGlCQUFpQixDQUFDO2dCQUFFQyxVQUFVO29CQUFFO2lCQUFhO1lBQUM7UUFDNUQ7SUFDRjtJQUVBLE9BQU87UUFDTG9EO1FBQ0FDO0lBQ0Y7QUFDRixFQUFFO0lBbERXRjs7UUFDYXZGLHNEQUFjQTtRQUlyQlksbURBQWVBO1FBRVpoQixpRUFBY0E7UUFFMEJGLDhEQUFXQTs7O0FBMkN6RSx1Q0FBdUM7QUFFaEMsTUFBTWlHLDBCQUEwQjs7SUFDckMsTUFBTSxFQUFFckQsV0FBVyxFQUFFLEdBQUd0QywwREFBY0E7SUFDdEMsTUFBTSxFQUFFb0IsUUFBQUEsT0FBTSxFQUFFLEdBQUdrQixlQUFlLENBQUM7SUFFbkMsTUFBTSxDQUFDaUIsT0FBTyxHQUFHM0MsdURBQWVBO0lBRWhDLE1BQU1HLGNBQWNuQixxRUFBY0E7SUFFbEMsTUFBTSxFQUFFb0IsUUFBUXdDLGdCQUFnQixFQUFFakIsV0FBV2tCLFVBQVUsRUFBRSxHQUFHL0Qsa0VBQVdBLENBQUM7UUFDdEV3QixZQUFZO2dCQUFPLEVBQUUwRSxNQUFNLEVBQUVyRSxFQUFFLEVBQUV3RCxRQUFRLEVBQUU7WUFDekMsSUFBSTNELFNBQVE7Z0JBQ1YsSUFBSTtvQkFDRixNQUFNeUUsY0FBYyxNQUFNekYsc0RBQVFBLENBQUM7d0JBQ2pDa0IsWUFBWTt3QkFDWkM7b0JBQ0Y7b0JBRUEsSUFBSXNFLFlBQVlyRSxNQUFNLElBQUk7d0JBQ3hCLE1BQU0sRUFBRXNDLFNBQVMsRUFBRUMsU0FBUyxFQUFFLEdBQUc4QixZQUFZbkUsSUFBSTt3QkFDakQsTUFBTUMsYUFBYTFCLDBEQUFjQSxDQUFDNkQsV0FBVzhCO3dCQUU3QyxJQUFJLENBQUNqRSxZQUFZOzRCQUNmLE1BQU1tRSxlQUFlO2dDQUFDRjttQ0FBVzlCOzZCQUFVLENBQUNqQyxLQUFLLENBQUMsR0FBRzs0QkFDckQsTUFBTXhCLHlEQUFXQSxDQUFDO2dDQUNoQnFCLE1BQU07b0NBQ0pvQyxXQUFXZ0M7b0NBQ1gvQixXQUFXQSxhQUFhZ0I7Z0NBQzFCO2dDQUNBekQsWUFBWTtnQ0FDWkM7NEJBQ0Y7NEJBQ0FnQyxPQUFPO2dDQUNMTSxPQUFPO2dDQUNQRyxTQUFTO2dDQUNUQyxhQUFhOzRCQUNmO3dCQUNGO29CQUNGO2dCQUNGLEVBQUUsT0FBT2pDLE9BQU87b0JBQ2R1QixPQUFPO3dCQUNMTSxPQUFPO3dCQUNQRyxTQUFTO3dCQUNUQyxhQUFhO29CQUNmO2dCQUNBLHNCQUFzQjtnQkFDeEI7WUFDRjtRQUNGO1FBQ0EvQixXQUFXLENBQUNtRCxHQUFHQztZQUNidkUsWUFBWW9CLGlCQUFpQixDQUFDO2dCQUM1QkMsVUFBVTtvQkFBRSxvQkFBZ0MsT0FBYmtELFVBQVUvRCxFQUFFO2lCQUFHO1lBQ2hEO1FBQ0Y7SUFDRjtJQUVBLE9BQU87UUFDTGlDO1FBQ0FDO0lBQ0Y7QUFDRixFQUFFO0lBM0RXa0M7O1FBQ2EzRixzREFBY0E7UUFHckJZLG1EQUFlQTtRQUVaaEIsaUVBQWNBO1FBRTBCRiw4REFBV0E7OztBQXFEbEUsTUFBTXFHLCtCQUErQjs7SUFDMUMsTUFBTSxFQUFFekQsV0FBVyxFQUFFLEdBQUd0QywwREFBY0E7SUFDdEMsTUFBTSxFQUFFb0IsUUFBQUEsT0FBTSxFQUFFLEdBQUdrQixlQUFlLENBQUM7SUFFbkMsTUFBTSxDQUFDaUIsT0FBTyxHQUFHM0MsdURBQWVBO0lBRWhDLE1BQU1HLGNBQWNuQixxRUFBY0E7SUFFbEMsTUFBTSxFQUFFb0IsUUFBUWdGLHlCQUF5QixFQUFFekQsV0FBV2tELFVBQVUsRUFBRSxHQUNoRS9GLGtFQUFXQSxDQUFDO1FBQ1Z3QixZQUFZO2dCQUFPLEVBQUUwRSxNQUFNLEVBQUVyRSxFQUFFLEVBQUU7WUFDL0IsSUFBSUgsU0FBUTtnQkFDVixJQUFJO29CQUNGLE1BQU1mLHlEQUFXQSxDQUFDO3dCQUNoQnFCLE1BQU07NEJBQ0pvQyxXQUFXakUsZ0VBQVdBLENBQUMrRjt3QkFDekI7d0JBQ0F0RSxZQUFZO3dCQUNaQztvQkFDRjtvQkFFQWdDLE9BQU87d0JBQ0xNLE9BQU87d0JBQ1BHLFNBQVM7d0JBQ1RDLGFBQWE7b0JBQ2Y7b0JBQ0EsT0FBTztnQkFDVCxFQUFFLE9BQU9qQyxPQUFPO29CQUNkdUIsT0FBTzt3QkFDTE0sT0FBTzt3QkFDUEcsU0FBUzt3QkFDVEMsYUFBYTtvQkFDZjtnQkFDQSxzQkFBc0I7Z0JBQ3hCO1lBQ0YsT0FBTztnQkFDTCxNQUFNLElBQUloQyxNQUFNO1lBQ2xCO1FBQ0Y7UUFDQUMsV0FBVyxDQUFDbUQsR0FBR0M7WUFDYnZFLFlBQVlvQixpQkFBaUIsQ0FBQztnQkFDNUJDLFVBQVU7b0JBQUUsb0JBQWdDLE9BQWJrRCxVQUFVL0QsRUFBRTtpQkFBRztZQUNoRDtRQUNGO0lBQ0Y7SUFFRixPQUFPO1FBQ0x5RTtRQUNBUDtJQUNGO0FBQ0YsRUFBRTtJQWxEV007O1FBQ2EvRixzREFBY0E7UUFHckJZLG1EQUFlQTtRQUVaaEIsaUVBQWNBO1FBR2hDRiw4REFBV0E7OztBQTJDZiw0QkFBNEI7QUFFckIsTUFBTXVHLDJCQUEyQjs7SUFDdEMsTUFBTSxFQUFFM0QsV0FBVyxFQUFFLEdBQUd0QywwREFBY0E7SUFDdEMsTUFBTSxFQUFFb0IsUUFBQUEsT0FBTSxFQUFFLEdBQUdrQixlQUFlLENBQUM7SUFFbkMsTUFBTXZCLGNBQWNuQixxRUFBY0E7SUFFbEMsTUFBTSxDQUFDMkQsT0FBTyxHQUFHM0MsdURBQWVBO0lBRWhDLE1BQU0sRUFBRUksUUFBUWtGLHFCQUFxQixFQUFFLEdBQUd4RyxrRUFBV0EsQ0FBQztRQUNwRHdCLFlBQVksT0FBT0M7WUFDakIsSUFBSUMsU0FBUTtnQkFDVixJQUFJO29CQUNGLE1BQU0rRSx3QkFBd0IsTUFBTS9GLHNEQUFRQSxDQUFDO3dCQUMzQ2tCLFlBQVk7d0JBQ1pDLElBQUlIO29CQUNOO29CQUVBLElBQUkrRSxzQkFBc0IzRSxNQUFNLElBQUk7d0JBQ2xDLE1BQU0sRUFBRUMsWUFBWSxFQUFFLEdBQUcwRSxzQkFBc0J6RSxJQUFJLE1BQU0sQ0FBQzt3QkFFMUQsTUFBTUMsYUFBYTFCLDBEQUFjQSxDQUFDd0IsY0FBY047d0JBRWhELElBQUksQ0FBQ1EsWUFBWTs0QkFDZixNQUFNQyxrQkFBa0I7Z0NBQUNUO21DQUFhTTs2QkFBYSxDQUFDSSxLQUFLLENBQUMsR0FBRzs0QkFFN0QsTUFBTXhCLHlEQUFXQSxDQUFDO2dDQUNoQmlCLFlBQVk7Z0NBQ1pDLElBQUlIO2dDQUNKTSxNQUFNO29DQUNKRCxjQUFjRztnQ0FDaEI7NEJBQ0Y7d0JBQ0Y7b0JBQ0YsT0FBTzt3QkFDTCxNQUFNMUIsc0RBQVFBLENBQUM7NEJBQ2JvQixZQUFZOzRCQUNaQyxJQUFJSDs0QkFDSk0sTUFBTTtnQ0FDSkksU0FBU1Y7Z0NBQ1RLLGNBQWMzQiwrREFBVUEsQ0FBQ3FCO2dDQUN6QlksWUFBWWhDLG9FQUFlQTs0QkFDN0I7d0JBQ0Y7b0JBQ0Y7b0JBRUF3RCxPQUFPO3dCQUNMTSxPQUFPO3dCQUNQRyxTQUFTO3dCQUNUQyxhQUFhO29CQUNmO2dCQUNGLEVBQUUsT0FBT2pDLE9BQU87Z0JBQ2Qsc0JBQXNCO2dCQUN4QjtZQUNGO1FBQ0Y7UUFDQUUsV0FBVztZQUNUbkIsWUFBWW9CLGlCQUFpQixDQUFDO2dCQUM1QkMsVUFBVTtvQkFBQztpQkFBeUI7WUFDdEM7WUFDQXJCLFlBQVlvQixpQkFBaUIsQ0FBQztnQkFDNUJDLFVBQVU7b0JBQUM7aUJBQXFCO1lBQ2xDO1FBQ0Y7SUFDRjtJQUVBLE9BQU87UUFDTDhEO0lBQ0Y7QUFDRixFQUFFO0lBcEVXRDs7UUFDYWpHLHNEQUFjQTtRQUdsQkosaUVBQWNBO1FBRWpCZ0IsbURBQWVBO1FBRVVsQiw4REFBV0E7OztBQThEaEQsTUFBTTBHLDRCQUE0Qjs7SUFDdkMsTUFBTSxFQUFFOUQsV0FBVyxFQUFFLEdBQUd0QywwREFBY0E7SUFDdEMsTUFBTSxFQUFFb0IsUUFBQUEsT0FBTSxFQUFFLEdBQUdrQixlQUFlLENBQUM7SUFFbkMsTUFBTSxFQUFFQyxTQUFTLEVBQUVDLFNBQVMsRUFBRUMsT0FBTyxFQUFFQyxVQUFVLEVBQUVWLEtBQUssRUFBRU4sSUFBSSxFQUFFLEdBQUcvQiwrREFBUUEsQ0FBQztRQUMxRXlDLFVBQVU7WUFBQztZQUFzQjtnQkFBRWhCLFFBQUFBO1lBQU87U0FBRTtRQUM1Q3VCLFNBQVM7WUFDUCxJQUFJdkIsU0FBUTtnQkFDVixJQUFJO29CQUNGLE1BQU1pRixrQkFBa0IsTUFBTWpHLHNEQUFRQSxDQUFDO3dCQUNyQ2tCLFlBQVk7d0JBQ1pDLElBQUlIO29CQUNOO29CQUVBLE1BQU0sRUFBRUssWUFBWSxFQUFFLEdBQUc0RSxDQUFBQSw0QkFBQUEsc0NBQUFBLGdCQUFpQjNFLElBQUksT0FBTSxDQUFDO29CQUVyRCxJQUFJMkUsZ0JBQWdCN0UsTUFBTSxPQUFNQyx5QkFBQUEsbUNBQUFBLGFBQWM0QyxNQUFNLEdBQUU7d0JBQ3BELE9BQU8sTUFBTXhELHlFQUFzQkEsQ0FBQ1k7b0JBQ3RDLE9BQU87d0JBQ0wsT0FBTztvQkFDVDtnQkFDRixFQUFFLE9BQU9PLE9BQU87Z0JBQ2Qsc0JBQXNCO2dCQUN4QjtZQUNGLE9BQU87Z0JBQ0wsTUFBTSxJQUFJQyxNQUFNO1lBQ2xCO1FBQ0Y7SUFDRjtJQUVBLE9BQU87UUFBRU07UUFBV0M7UUFBV0M7UUFBU0M7UUFBWVY7UUFBT047SUFBSztBQUNsRSxFQUFFO0tBL0JXMEU7O1FBQ2FwRyxzREFBY0E7UUFHNkJMLDJEQUFRQTs7O0FBNkJ0RSxNQUFNMkcsMkJBQTJCOztJQUN0QyxNQUFNLEVBQUVoRSxXQUFXLEVBQUUsR0FBR3RDLDBEQUFjQTtJQUN0QyxNQUFNLEVBQUVvQixRQUFBQSxPQUFNLEVBQUUsR0FBR2tCLGVBQWUsQ0FBQztJQUVuQyxNQUFNLEVBQUVDLFNBQVMsRUFBRUMsU0FBUyxFQUFFQyxPQUFPLEVBQUVDLFVBQVUsRUFBRVYsS0FBSyxFQUFFTixJQUFJLEVBQUUsR0FBRy9CLCtEQUFRQSxDQUFDO1FBQzFFeUMsVUFBVTtZQUFDO1lBQTBCO2dCQUFFaEIsUUFBQUE7WUFBTztTQUFFO1FBQ2hEdUIsU0FBUztZQUNQLElBQUl2QixTQUFRO2dCQUNWLElBQUk7b0JBQ0YsTUFBTWlGLGtCQUFrQixNQUFNakcsc0RBQVFBLENBQUM7d0JBQ3JDa0IsWUFBWTt3QkFDWkMsSUFBSUg7b0JBQ047b0JBRUEsTUFBTUcsS0FBSzhFLDRCQUFBQSxzQ0FBQUEsZ0JBQWlCOUUsRUFBRTtvQkFDOUIsTUFBTSxFQUFFRSxZQUFZLEVBQUUsR0FBRzRFLENBQUFBLDRCQUFBQSxzQ0FBQUEsZ0JBQWlCM0UsSUFBSSxPQUFNLENBQUM7b0JBRXJELE1BQU02RSx3QkFBd0I5RSx5QkFBQUEsbUNBQUFBLGFBQWMrRSxNQUFNLENBQUMsQ0FBQ0MsS0FBS0M7d0JBQ3ZERCxJQUFJRSxJQUFJLENBQUNDLE9BQU9DLElBQUksQ0FBQ0gsS0FBSyxDQUFDLEVBQUU7d0JBQzdCLE9BQU9EO29CQUNULEdBQUcsRUFBRTtvQkFFTCxPQUFPO3dCQUFFRjt3QkFBdUJPLHFCQUFxQnZGO29CQUFHO2dCQUMxRCxFQUFFLE9BQU9TLE9BQU87Z0JBQ2Qsc0JBQXNCO2dCQUN4QjtZQUNGLE9BQU87Z0JBQ0wsTUFBTSxJQUFJQyxNQUFNO1lBQ2xCO1FBQ0Y7SUFDRjtJQUVBLE9BQU87UUFBRU07UUFBV0M7UUFBV0M7UUFBU0M7UUFBWVY7UUFBT047SUFBSztBQUNsRSxFQUFFO0tBakNXNEU7O1FBQ2F0RyxzREFBY0E7UUFHNkJMLDJEQUFRQTs7O0FBK0J0RSxNQUFNb0gsNkJBQTZCOztJQUN4QyxNQUFNLEVBQUV6RSxXQUFXLEVBQUUsR0FBR3RDLDBEQUFjQTtJQUN0QyxNQUFNLEVBQUVvQixRQUFBQSxPQUFNLEVBQUUsR0FBR2tCLGVBQWUsQ0FBQztJQUVuQyxNQUFNLENBQUNpQixPQUFPLEdBQUczQyx1REFBZUE7SUFFaEMsTUFBTUcsY0FBY25CLHFFQUFjQTtJQUVsQyxNQUFNLEVBQUVvQixRQUFRZ0csdUJBQXVCLEVBQUUsR0FBR3RILGtFQUFXQSxDQUFDO1FBQ3REd0IsWUFBWSxPQUFPK0Y7WUFDakIsTUFBTSxFQUFFQyxTQUFTLEVBQUUzRixFQUFFLEVBQUUsR0FBRzBGO1lBQzFCLElBQUk3RixTQUFRO2dCQUNWLElBQUk7b0JBQ0YsTUFBTWYseURBQVdBLENBQUM7d0JBQ2hCcUIsTUFBTTs0QkFDSkQsY0FBYzVCLGdFQUFXQSxDQUFDcUg7d0JBQzVCO3dCQUNBNUYsWUFBWTt3QkFDWkM7b0JBQ0Y7b0JBRUFnQyxPQUFPO3dCQUNMTSxPQUFPO3dCQUNQRyxTQUFTO3dCQUNUQyxhQUFhO29CQUNmO2dCQUNGLEVBQUUsT0FBT2pDLE9BQU87b0JBQ2R1QixPQUFPO3dCQUNMTSxPQUFPO3dCQUNQRyxTQUFTO3dCQUNUQyxhQUFhO29CQUNmO2dCQUNBLHFCQUFxQjtnQkFDdkI7WUFDRjtRQUNGO1FBQ0EvQixXQUFXO1lBQ1RuQixZQUFZb0IsaUJBQWlCLENBQUM7Z0JBQzVCQyxVQUFVO29CQUFDO2lCQUF5QjtZQUN0QztZQUNBckIsWUFBWW9CLGlCQUFpQixDQUFDO2dCQUM1QkMsVUFBVTtvQkFBQztpQkFBcUI7WUFDbEM7UUFDRjtJQUNGO0lBRUEsT0FBTztRQUFFNEU7SUFBd0I7QUFDbkMsRUFBRTtLQS9DV0Q7O1FBQ2EvRyxzREFBY0E7UUFHckJZLG1EQUFlQTtRQUVaaEIsaUVBQWNBO1FBRVVGLDhEQUFXQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvbGliL2FjdGlvbnMvcGxheWxpc3QuYWN0aW9uLmpzP2YxOTgiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgcmVhY3QtaG9va3MvZXhoYXVzdGl2ZS1kZXBzICovXHJcbi8qIGVzbGludC1kaXNhYmxlIHJlYWN0LWhvb2tzL3J1bGVzLW9mLWhvb2tzICovXHJcbmltcG9ydCB7IHVzZU5hdmlnYXRlIH0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIjtcclxuaW1wb3J0IHsgdjQgYXMgdXVpZHY0IH0gZnJvbSBcInV1aWRcIjtcclxuaW1wb3J0IHsgdXNlTXV0YXRpb24sIHVzZVF1ZXJ5LCB1c2VRdWVyeUNsaWVudCB9IGZyb20gXCJAdGFuc3RhY2svcmVhY3QtcXVlcnlcIjtcclxuaW1wb3J0IHsgYXJyYXlSZW1vdmUsIGFycmF5VW5pb24sIHNlcnZlclRpbWVzdGFtcCB9IGZyb20gXCJAZmlyZWJhc2UvZmlyZXN0b3JlXCI7XHJcblxyXG5pbXBvcnQgeyB1c2VDdXJyZW50VXNlciB9IGZyb20gXCIuLi8uLi9saWIvc3RvcmVcIjtcclxuaW1wb3J0IHsgZWxlbWVudEluQXJyYXkgfSBmcm9tIFwiLi4vLi4vbGliL3V0aWxzXCI7XHJcbmltcG9ydCB7XHJcbiAgZmJTZXREb2MsXHJcbiAgZmJBZGREb2MsXHJcbiAgZmJHZXREb2MsXHJcbiAgZmJVcGRhdGVEb2MsXHJcbiAgZmJEZWxldGVEb2MsXHJcbiAgZmJHZXRDb2xsZWN0aW9uLFxyXG4gIGZiQ291bnRDb2xsZWN0aW9uLFxyXG4gIHVwbG9hZEltYWdlLFxyXG4gIGZiRGVsZXRlU3RvcmFnZSxcclxufSBmcm9tIFwiLi4vLi4vbGliL2hlbHBlcnNcIjtcclxuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAnbmV4dC9yb3V0ZXInO1xyXG5pbXBvcnQgeyB1c2VOb3RpZmljYXRpb24gfSBmcm9tIFwiLi4vLi4vaG9va3NcIjtcclxuXHJcbmltcG9ydCB7IGZldGNoTXVsdGlwbGVQbGF5bGlzdHMgfSBmcm9tIFwiLi9lZGl0b3JpYWwuYWN0aW9uXCI7XHJcblxyXG4vLyByZWNlbnQgcGxheWVkXHJcbmV4cG9ydCBjb25zdCB1c2VTYXZlUmVjZW50UGxheWVkID0gKCkgPT4ge1xyXG5cclxuXHJcbiAgY29uc3QgcXVlcnlDbGllbnQgPSB1c2VRdWVyeUNsaWVudCgpO1xyXG5cclxuICBjb25zdCB7IG11dGF0ZTogc2F2ZVJlY2VudFBsYXllZCB9ID0gdXNlTXV0YXRpb24oe1xyXG4gICAgbXV0YXRpb25GbjogYXN5bmMgKHBsYXlsaXN0KSA9PiB7XHJcbiAgICAgIGlmICh1c2VySWQpIHtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgY29uc3QgcmVjZW50UGxheWVkUmVmID0gYXdhaXQgZmJHZXREb2Moe1xyXG4gICAgICAgICAgICBjb2xsZWN0aW9uOiBcInJlY2VudFBsYXllZFwiLFxyXG4gICAgICAgICAgICBpZDogdXNlcklkLFxyXG4gICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgaWYgKHJlY2VudFBsYXllZFJlZi5leGlzdHMoKSkge1xyXG4gICAgICAgICAgICBjb25zdCB7IHBsYXlsaXN0X2lkcyB9ID0gcmVjZW50UGxheWVkUmVmLmRhdGEoKSB8fCB7fTtcclxuICAgICAgICAgICAgY29uc3Qgbm90SW5BcnJheSA9IGVsZW1lbnRJbkFycmF5KHBsYXlsaXN0X2lkcywgcGxheWxpc3QpO1xyXG4gICAgICAgICAgICBpZiAoIW5vdEluQXJyYXkpIHtcclxuICAgICAgICAgICAgICBjb25zdCBwbGF5bGlzdElkc0RhdGEgPSBbcGxheWxpc3QsIC4uLnBsYXlsaXN0X2lkc10uc2xpY2UoMCwgNik7XHJcblxyXG4gICAgICAgICAgICAgIGF3YWl0IGZiVXBkYXRlRG9jKHtcclxuICAgICAgICAgICAgICAgIGNvbGxlY3Rpb246IFwicmVjZW50UGxheWVkXCIsXHJcbiAgICAgICAgICAgICAgICBpZDogdXNlcklkLFxyXG4gICAgICAgICAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgICAgICAgICBwbGF5bGlzdF9pZHM6IHBsYXlsaXN0SWRzRGF0YSxcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGF3YWl0IGZiU2V0RG9jKHtcclxuICAgICAgICAgICAgICBjb2xsZWN0aW9uOiBcInJlY2VudFBsYXllZFwiLFxyXG4gICAgICAgICAgICAgIGlkOiB1c2VySWQsXHJcbiAgICAgICAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgICAgICAgdXNlcl9pZDogdXNlcklkLFxyXG4gICAgICAgICAgICAgICAgcGxheWxpc3RfaWRzOiBhcnJheVVuaW9uKHBsYXlsaXN0KSxcclxuICAgICAgICAgICAgICAgIGNyZWF0ZWRfYXQ6IHNlcnZlclRpbWVzdGFtcCgpLFxyXG4gICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAvLyBjb25zb2xlLmxvZyhlcnJvcik7XHJcbiAgICAgICAgfVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImludmFsaWQgcGFyYW1zXCIpO1xyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAgb25TdWNjZXNzOiAoKSA9PiB7XHJcbiAgICAgIHF1ZXJ5Q2xpZW50LmludmFsaWRhdGVRdWVyaWVzKHsgcXVlcnlLZXk6IFtcInJlY2VudFBsYXllZFwiXSB9KTtcclxuICAgIH0sXHJcbiAgfSk7XHJcblxyXG4gIHJldHVybiB7XHJcbiAgICBzYXZlUmVjZW50UGxheWVkLFxyXG4gIH07XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgdXNlRmV0Y2hSZWNlbnRQbGF5ZWQgPSAoKSA9PiB7XHJcbiAgY29uc3QgeyBjdXJyZW50VXNlciB9ID0gdXNlQ3VycmVudFVzZXIoKTtcclxuICBjb25zdCB7IHVzZXJJZCB9ID0gY3VycmVudFVzZXIgfHwge307XHJcblxyXG4gIGNvbnN0IHsgaXNQZW5kaW5nLCBpc1N1Y2Nlc3MsIGlzRXJyb3IsIGlzRmV0Y2hpbmcsIGVycm9yLCBkYXRhIH0gPSB1c2VRdWVyeSh7XHJcbiAgICBxdWVyeUtleTogW1wicmVjZW50UGxheWVkXCIsIHsgdXNlcklkIH1dLFxyXG4gICAgcXVlcnlGbjogYXN5bmMgKCkgPT4ge1xyXG4gICAgICBpZiAodXNlcklkKSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgIGNvbnN0IHJlY2VudFBsYXllZFJlZiA9IGF3YWl0IGZiR2V0RG9jKHtcclxuICAgICAgICAgICAgY29sbGVjdGlvbjogXCJyZWNlbnRQbGF5ZWRcIixcclxuICAgICAgICAgICAgaWQ6IHVzZXJJZCxcclxuICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgIGlmIChyZWNlbnRQbGF5ZWRSZWYuZXhpc3RzKCkpIHtcclxuICAgICAgICAgICAgY29uc3QgZGF0YSA9IHJlY2VudFBsYXllZFJlZi5kYXRhKCkucGxheWxpc3RfaWRzO1xyXG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgZmV0Y2hNdWx0aXBsZVBsYXlsaXN0cyhkYXRhKTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAvLyBjb25zb2xlLmxvZyhlcnJvcik7XHJcbiAgICAgICAgfVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIC8vIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgdXNlcklkXCIpO1xyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gIH0pO1xyXG5cclxuICByZXR1cm4geyBpc1BlbmRpbmcsIGlzU3VjY2VzcywgaXNFcnJvciwgaXNGZXRjaGluZywgZXJyb3IsIGRhdGEgfTtcclxufTtcclxuXHJcbi8vIGZldGNoIHBsYXlsaXN0c1xyXG5cclxuZXhwb3J0IGNvbnN0IHVzZUZldGNoTXlQbGF5bGlzdHMgPSAoKSA9PiB7XHJcbiAgY29uc3QgeyBjdXJyZW50VXNlciB9ID0gdXNlQ3VycmVudFVzZXIoKTtcclxuICBjb25zdCB7IHVzZXJJZCB9ID0gY3VycmVudFVzZXIgfHwge307XHJcblxyXG5cclxuXHJcbiAgY29uc3QgeyBpc1BlbmRpbmcsIGlzU3VjY2VzcywgaXNFcnJvciwgaXNGZXRjaGluZywgZXJyb3IsIGRhdGEgfSA9IHVzZVF1ZXJ5KHtcclxuICAgIHF1ZXJ5S2V5OiBbXCJteVBsYXlsaXN0c1wiLCB7IHVzZXJJZCwgbmF2aWdhdGUgfV0sXHJcbiAgICBxdWVyeUZuOiBhc3luYyAoKSA9PiB7XHJcbiAgICAgIGlmICh1c2VySWQpIHtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgY29uc3QgbXlQbGF5bGlzdHNSZWYgPSBhd2FpdCBmYkdldENvbGxlY3Rpb24oe1xyXG4gICAgICAgICAgICBjb2xsZWN0aW9uOiBcIm15UGxheWxpc3RzXCIsXHJcbiAgICAgICAgICAgIHdoZXJlUXVlcmllczogW1tcInVzZXJfaWRcIiwgXCI9PVwiLCB1c2VySWRdXSxcclxuICAgICAgICAgICAgb3JkZXJCeVF1ZXJpZXM6IFtbXCJjcmVhdGVkX2F0XCIsIFwiZGVzY1wiXV0sXHJcbiAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICByZXR1cm4gbXlQbGF5bGlzdHNSZWYuZG9jcy5tYXAoKGkpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgcyA9IGkuZGF0YSgpO1xyXG4gICAgICAgICAgICByZXR1cm4geyAuLi5zLCBpZDogaS5pZCwgY3JlYXRlZF9hdDogcy5jcmVhdGVkX2F0LnRvRGF0ZSgpIH07XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIFxyXG4gICAgICAgICAgLy8gY29uc29sZS5sb2coZXJyb3IpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICAvLyB0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIHBhcmFtc1wiKTtcclxuICAgICAgfVxyXG4gICAgfSxcclxuICB9KTtcclxuXHJcbiAgcmV0dXJuIHsgaXNQZW5kaW5nLCBpc1N1Y2Nlc3MsIGlzRXJyb3IsIGlzRmV0Y2hpbmcsIGVycm9yLCBkYXRhIH07XHJcbn07XHJcblxyXG4vLyBwbGF5bGlzdCBDUlVEXHJcblxyXG5leHBvcnQgY29uc3QgdXNlQ3JlYXRlTXlQbGF5bGlzdCA9ICgpID0+IHtcclxuICBjb25zdCB7IGN1cnJlbnRVc2VyIH0gPSB1c2VDdXJyZW50VXNlcigpO1xyXG4gIGNvbnN0IHsgdXNlcklkIH0gPSBjdXJyZW50VXNlciB8fCB7fTtcclxuXHJcbiBcclxuICBjb25zdCBbbm90aWZ5XSA9IHVzZU5vdGlmaWNhdGlvbigpO1xyXG5cclxuICBjb25zdCBxdWVyeUNsaWVudCA9IHVzZVF1ZXJ5Q2xpZW50KCk7XHJcblxyXG4gIGNvbnN0IHsgbXV0YXRlOiBjcmVhdGVNeVBsYXlsaXN0LCBpc1BlbmRpbmc6IGlzQ3JlYXRpbmcgfSA9IHVzZU11dGF0aW9uKHtcclxuICAgIG11dGF0aW9uRm46IGFzeW5jICgpID0+IHtcclxuICAgICAgaWYgKHVzZXJJZCkge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICBjb25zdCBjb3VudE15UGxheWxpc3QgPSBhd2FpdCBmYkNvdW50Q29sbGVjdGlvbih7XHJcbiAgICAgICAgICAgIGNvbGxlY3Rpb246IFwibXlQbGF5bGlzdHNcIixcclxuICAgICAgICAgICAgd2hlcmVRdWVyaWVzOiBbW1widXNlcl9pZFwiLCBcIj09XCIsIHVzZXJJZF1dLFxyXG4gICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgY29uc3QgZG9jUmVmID0gYXdhaXQgZmJBZGREb2Moe1xyXG4gICAgICAgICAgICBjb2xsZWN0aW9uOiBcIm15UGxheWxpc3RzXCIsXHJcbiAgICAgICAgICAgIGRhdGE6IHtcclxuICAgICAgICAgICAgICB1c2VyX2lkOiB1c2VySWQsXHJcbiAgICAgICAgICAgICAgZGVzYzogXCJIZXJlIGlzIGFuIG9wdGlvbmFsIGRlc2NyaXB0aW9uXCIsXHJcbiAgICAgICAgICAgICAgdGl0bGU6IGBNeSBQbGF5bGlzdCAjJHtjb3VudE15UGxheWxpc3QgKyAxfWAsXHJcbiAgICAgICAgICAgICAgdHJhY2tfaWRzOiBbXSxcclxuICAgICAgICAgICAgICBpbWFnZV91cmw6IG51bGwsXHJcbiAgICAgICAgICAgICAgY3JlYXRlZF9hdDogc2VydmVyVGltZXN0YW1wKCksXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICBcclxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgbm90aWZ5KHtcclxuICAgICAgICAgICAgdGl0bGU6IFwiRXJyb3JcIixcclxuICAgICAgICAgICAgdmFyaWFudDogXCJlcnJvclwiLFxyXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJSZXF1ZXN0IGZhaWxlZFwiLFxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgICAvLyBjb25zb2xlLmxvZyhlcnJvcik7XHJcbiAgICAgICAgfVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgcGFyYW1zXCIpO1xyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAgb25TdWNjZXNzOiAoKSA9PiB7XHJcbiAgICAgIHF1ZXJ5Q2xpZW50LmludmFsaWRhdGVRdWVyaWVzKHsgcXVlcnlLZXk6IFtcIm15UGxheWxpc3RzXCJdIH0pO1xyXG4gICAgfSxcclxuICB9KTtcclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIGNyZWF0ZU15UGxheWxpc3QsXHJcbiAgICBpc0NyZWF0aW5nLFxyXG4gIH07XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgdXNlRmV0Y2hNeVBsYXlsaXN0ID0gKGlkKSA9PiB7XHJcbiAgY29uc3QgeyBjdXJyZW50VXNlciB9ID0gdXNlQ3VycmVudFVzZXIoKTtcclxuICBjb25zdCB7IHVzZXJJZCB9ID0gY3VycmVudFVzZXIgfHwge307XHJcblxyXG4gIGNvbnN0IFtub3RpZnldID0gdXNlTm90aWZpY2F0aW9uKCk7XHJcbiBcclxuXHJcbiAgY29uc3QgeyBpc1BlbmRpbmcsIGlzU3VjY2VzcywgaXNFcnJvciwgaXNGZXRjaGluZywgZXJyb3IsIGRhdGEgfSA9IHVzZVF1ZXJ5KHtcclxuICAgIHF1ZXJ5S2V5OiBbYHNpbmdsZU15UGxheWxpc3RfJHtpZH1gLCB7IHVzZXJJZCwgaWQgfV0sXHJcbiAgICBxdWVyeUZuOiBhc3luYyAoKSA9PiB7XHJcbiAgICAgIGlmICh1c2VySWQpIHtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgY29uc3Qgc2luZ2xlUGxheWxpc3QgPSBhd2FpdCBmYkdldERvYyh7XHJcbiAgICAgICAgICAgIGNvbGxlY3Rpb246IFwibXlQbGF5bGlzdHNcIixcclxuICAgICAgICAgICAgaWQsXHJcbiAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICBjb25zdCB7IHRyYWNrX2lkcyB9ID0gc2luZ2xlUGxheWxpc3QuZGF0YSgpIHx8IHt9O1xyXG5cclxuICAgICAgICAgIGxldCBwbGF5bGlzdERldGFpbHMgPSBzaW5nbGVQbGF5bGlzdC5kYXRhKCk7XHJcblxyXG4gICAgICAgICAgcGxheWxpc3REZXRhaWxzID0ge1xyXG4gICAgICAgICAgICAuLi5wbGF5bGlzdERldGFpbHMsXHJcbiAgICAgICAgICAgIGlkOiBzaW5nbGVQbGF5bGlzdC5pZCxcclxuICAgICAgICAgICAgY3JlYXRlZF9hdDogcGxheWxpc3REZXRhaWxzLmNyZWF0ZWRfYXQudG9EYXRlKCksXHJcbiAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgIGlmICh0cmFja19pZHM/Lmxlbmd0aCkge1xyXG4gICAgICAgICAgICBjb25zdCB0cmFja3MgPSBhd2FpdCBmZXRjaE11bHRpcGxlUGxheWxpc3RzKHRyYWNrX2lkcyk7XHJcblxyXG4gICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgIHBsYXlsaXN0RGV0YWlscyxcclxuICAgICAgICAgICAgICBwbGF5bGlzdFRyYWNrczogdHJhY2tzLFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICBwbGF5bGlzdERldGFpbHMsXHJcbiAgICAgICAgICAgICAgcGxheWxpc3RUcmFja3M6IFtdLFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICBub3RpZnkoe1xyXG4gICAgICAgICAgICB0aXRsZTogXCJFcnJvclwiLFxyXG4gICAgICAgICAgICB2YXJpYW50OiBcImVycm9yXCIsXHJcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIlJlcXVlc3QgZmFpbGVkXCIsXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgIFxyXG4gICAgICAgICAgLy8gY29uc29sZS5sb2coZXJyb3IpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHBhcmFtc1wiKTtcclxuICAgICAgfVxyXG4gICAgfSxcclxuICB9KTtcclxuXHJcbiAgcmV0dXJuIHsgaXNQZW5kaW5nLCBpc1N1Y2Nlc3MsIGlzRXJyb3IsIGlzRmV0Y2hpbmcsIGVycm9yLCBkYXRhIH07XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgdXNlRWRpdE15UGxheWxpc3QgPSAoKSA9PiB7XHJcbiAgY29uc3QgeyBjdXJyZW50VXNlciB9ID0gdXNlQ3VycmVudFVzZXIoKTtcclxuICBjb25zdCB7IHVzZXJJZCB9ID0gY3VycmVudFVzZXIgfHwge307XHJcblxyXG4gIGNvbnN0IFtub3RpZnldID0gdXNlTm90aWZpY2F0aW9uKCk7XHJcbiAgY29uc3QgcXVlcnlDbGllbnQgPSB1c2VRdWVyeUNsaWVudCgpO1xyXG5cclxuICBjb25zdCB7XHJcbiAgICBtdXRhdGU6IGVkaXRNeVBsYXlsaXN0LFxyXG4gICAgaXNQZW5kaW5nOiBpc0VkaXRpbmcsXHJcbiAgICBpc1N1Y2Nlc3M6IGlzRWRpdGVkLFxyXG4gIH0gPSB1c2VNdXRhdGlvbih7XHJcbiAgICBtdXRhdGlvbkZuOiBhc3luYyAodmFsdWVzKSA9PiB7XHJcbiAgICAgIGNvbnN0IHsgaWQsIHRpdGxlLCBkZXNjLCBmaWxlcywgaW1hZ2VQYXRoIH0gPSB2YWx1ZXM7XHJcblxyXG4gICAgICBpZiAodXNlcklkKSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgIGxldCBpbWFnZVVybCA9IG51bGw7XHJcbiAgICAgICAgICBsZXQgcGF0aFVybCA9IG51bGw7XHJcbiAgICAgICAgICBpZiAoZmlsZXMpIHtcclxuICAgICAgICAgICAgcGF0aFVybCA9IGltYWdlUGF0aCB8fCB1dWlkdjQoKTtcclxuXHJcbiAgICAgICAgICAgIGltYWdlVXJsID0gYXdhaXQgdXBsb2FkSW1hZ2Uoe1xyXG4gICAgICAgICAgICAgIGltYWdlRmlsZTogZmlsZXNbMF0sXHJcbiAgICAgICAgICAgICAgc3RvcmFnZVBhdGg6IGBteVBsYXlsaXN0cy8ke3BhdGhVcmx9YCxcclxuICAgICAgICAgICAgICBmaWxlTmFtZTogXCJpbWFnZS5qcGdcIixcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgYXdhaXQgZmJVcGRhdGVEb2Moe1xyXG4gICAgICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICAgICAgdGl0bGUsXHJcbiAgICAgICAgICAgICAgZGVzYyxcclxuICAgICAgICAgICAgICAuLi4oZmlsZXMgPyB7IGltYWdlX3VybDogaW1hZ2VVcmwsIGltYWdlX3BhdGg6IHBhdGhVcmwgfSA6IHt9KSxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgY29sbGVjdGlvbjogXCJteVBsYXlsaXN0c1wiLFxyXG4gICAgICAgICAgICBpZCxcclxuICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgIG5vdGlmeSh7XHJcbiAgICAgICAgICAgIHRpdGxlOiBcIlN1Y2Nlc3NcIixcclxuICAgICAgICAgICAgdmFyaWFudDogXCJzdWNjZXNzXCIsXHJcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIkRldGFpbHMgc3VjY2Vzc2Z1bGx5IGVkaXRlZFwiLFxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgIG5vdGlmeSh7XHJcbiAgICAgICAgICAgIHRpdGxlOiBcIkVycm9yXCIsXHJcbiAgICAgICAgICAgIHZhcmlhbnQ6IFwiZXJyb3JcIixcclxuICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiUmVxdWVzdCBmYWlsZWRcIixcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIHBhcmFtc1wiKTtcclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIG9uU3VjY2VzczogKF8sIHZhcmlhYmxlcykgPT4ge1xyXG4gICAgICBxdWVyeUNsaWVudC5pbnZhbGlkYXRlUXVlcmllcyh7XHJcbiAgICAgICAgcXVlcnlLZXk6IFtgc2luZ2xlTXlQbGF5bGlzdF8ke3ZhcmlhYmxlcz8uaWR9YF0sXHJcbiAgICAgIH0pO1xyXG4gICAgfSxcclxuICB9KTtcclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIGVkaXRNeVBsYXlsaXN0LFxyXG4gICAgaXNFZGl0aW5nLFxyXG4gICAgaXNFZGl0ZWQsXHJcbiAgfTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCB1c2VSZW1vdmVNeVBsYXlsaXN0ID0gKCkgPT4ge1xyXG4gIGNvbnN0IHsgY3VycmVudFVzZXIgfSA9IHVzZUN1cnJlbnRVc2VyKCk7XHJcbiAgY29uc3QgeyB1c2VySWQgfSA9IGN1cnJlbnRVc2VyIHx8IHt9O1xyXG5cclxuICAvL2NvbnN0IG5hdmlnYXRlID0gdXNlTmF2aWdhdGUoKTtcclxuICBjb25zdCBbbm90aWZ5XSA9IHVzZU5vdGlmaWNhdGlvbigpO1xyXG5cclxuICBjb25zdCBxdWVyeUNsaWVudCA9IHVzZVF1ZXJ5Q2xpZW50KCk7XHJcblxyXG4gIGNvbnN0IHsgbXV0YXRlOiBkZWxldGVNeVBsYXlsaXN0LCBpc1BlbmRpbmc6IGlzUmVtb3ZpbmcgfSA9IHVzZU11dGF0aW9uKHtcclxuICAgIG11dGF0aW9uRm46IGFzeW5jIChpZCkgPT4ge1xyXG4gICAgICBpZiAodXNlcklkKSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgIGNvbnN0IHBsYXlsaXN0ID0gYXdhaXQgZmJHZXREb2MoeyBjb2xsZWN0aW9uOiBcIm15UGxheWxpc3RzXCIsIGlkIH0pO1xyXG5cclxuICAgICAgICAgIGNvbnN0IGZpbGVQYXRoID0gcGxheWxpc3Q/LmRhdGEoKT8uaW1hZ2VfcGF0aDtcclxuICAgICAgICAgIGF3YWl0IGZiRGVsZXRlRG9jKHsgY29sbGVjdGlvbjogXCJteVBsYXlsaXN0c1wiLCBpZCB9KTtcclxuICAgICAgICAgIGlmIChmaWxlUGF0aCkge1xyXG4gICAgICAgICAgICBhd2FpdCBmYkRlbGV0ZVN0b3JhZ2UoYG15UGxheWxpc3RzLyR7ZmlsZVBhdGh9L2ltYWdlLmpwZ2ApO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgLy8gbmF2aWdhdGUoXCIvbXktcGxheWxpc3RcIik7XHJcblxyXG4gICAgICAgICAgbm90aWZ5KHtcclxuICAgICAgICAgICAgdGl0bGU6IFwiU3VjY2Vzc1wiLFxyXG4gICAgICAgICAgICB2YXJpYW50OiBcInN1Y2Nlc3NcIixcclxuICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiRGVsZXRlZCBmcm9tIHBsYXlsaXN0XCIsXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICBub3RpZnkoe1xyXG4gICAgICAgICAgICB0aXRsZTogXCJFcnJvclwiLFxyXG4gICAgICAgICAgICB2YXJpYW50OiBcImVycm9yXCIsXHJcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIkFuIGVycm9yIG9jY3VycmVkIHdoaWxlIGRlbGV0aW5nXCIsXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGVycm9yKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBlcnJvclwiKTtcclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIG9uU3VjY2VzczogKCkgPT4ge1xyXG4gICAgICBxdWVyeUNsaWVudC5pbnZhbGlkYXRlUXVlcmllcyh7IHF1ZXJ5S2V5OiBbYG15UGxheWxpc3RzYF0gfSk7XHJcbiAgICB9LFxyXG4gIH0pO1xyXG5cclxuICByZXR1cm4ge1xyXG4gICAgZGVsZXRlTXlQbGF5bGlzdCxcclxuICAgIGlzUmVtb3ZpbmcsXHJcbiAgfTtcclxufTtcclxuXHJcbi8vIGFkZC9yZW1vdmUgdHJhY2tzIHRvL2Zyb20gYSBwbGF5bGlzdFxyXG5cclxuZXhwb3J0IGNvbnN0IHVzZUFkZFRyYWNrVG9NeVBsYXlsaXN0ID0gKCkgPT4ge1xyXG4gIGNvbnN0IHsgY3VycmVudFVzZXIgfSA9IHVzZUN1cnJlbnRVc2VyKCk7XHJcbiAgY29uc3QgeyB1c2VySWQgfSA9IGN1cnJlbnRVc2VyIHx8IHt9O1xyXG5cclxuICBjb25zdCBbbm90aWZ5XSA9IHVzZU5vdGlmaWNhdGlvbigpO1xyXG5cclxuICBjb25zdCBxdWVyeUNsaWVudCA9IHVzZVF1ZXJ5Q2xpZW50KCk7XHJcblxyXG4gIGNvbnN0IHsgbXV0YXRlOiBjcmVhdGVNeVBsYXlsaXN0LCBpc1BlbmRpbmc6IGlzQ3JlYXRpbmcgfSA9IHVzZU11dGF0aW9uKHtcclxuICAgIG11dGF0aW9uRm46IGFzeW5jICh7IHRyYWNrRCwgaWQsIGltYWdlVXJsIH0pID0+IHtcclxuICAgICAgaWYgKHVzZXJJZCkge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICBjb25zdCBhZGRUcmFja1JlZiA9IGF3YWl0IGZiR2V0RG9jKHtcclxuICAgICAgICAgICAgY29sbGVjdGlvbjogXCJteVBsYXlsaXN0c1wiLFxyXG4gICAgICAgICAgICBpZCxcclxuICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgIGlmIChhZGRUcmFja1JlZi5leGlzdHMoKSkge1xyXG4gICAgICAgICAgICBjb25zdCB7IHRyYWNrX2lkcywgaW1hZ2VfdXJsIH0gPSBhZGRUcmFja1JlZi5kYXRhKCk7XHJcbiAgICAgICAgICAgIGNvbnN0IG5vdEluQXJyYXkgPSBlbGVtZW50SW5BcnJheSh0cmFja19pZHMsIHRyYWNrRCk7XHJcblxyXG4gICAgICAgICAgICBpZiAoIW5vdEluQXJyYXkpIHtcclxuICAgICAgICAgICAgICBjb25zdCB0cmFja0lkc0RhdGEgPSBbdHJhY2tELCAuLi50cmFja19pZHNdLnNsaWNlKDAsIDEwKTtcclxuICAgICAgICAgICAgICBhd2FpdCBmYlVwZGF0ZURvYyh7XHJcbiAgICAgICAgICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICAgICAgICAgIHRyYWNrX2lkczogdHJhY2tJZHNEYXRhLFxyXG4gICAgICAgICAgICAgICAgICBpbWFnZV91cmw6IGltYWdlX3VybCB8fCBpbWFnZVVybCxcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBjb2xsZWN0aW9uOiBcIm15UGxheWxpc3RzXCIsXHJcbiAgICAgICAgICAgICAgICBpZCxcclxuICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICBub3RpZnkoe1xyXG4gICAgICAgICAgICAgICAgdGl0bGU6IFwiU3VjY2Vzc1wiLFxyXG4gICAgICAgICAgICAgICAgdmFyaWFudDogXCJzdWNjZXNzXCIsXHJcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJBZGRlZCB0byBwbGF5bGlzdFwiLFxyXG4gICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgIG5vdGlmeSh7XHJcbiAgICAgICAgICAgIHRpdGxlOiBcIkVycm9yXCIsXHJcbiAgICAgICAgICAgIHZhcmlhbnQ6IFwiZXJyb3JcIixcclxuICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiQW4gZXJyb3Igb2NjdXJyZWQgd2hpbGUgYWRkaW5nXCIsXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGVycm9yKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgICBvblN1Y2Nlc3M6IChfLCB2YXJpYWJsZXMpID0+IHtcclxuICAgICAgcXVlcnlDbGllbnQuaW52YWxpZGF0ZVF1ZXJpZXMoe1xyXG4gICAgICAgIHF1ZXJ5S2V5OiBbYHNpbmdsZU15UGxheWxpc3RfJHt2YXJpYWJsZXMuaWR9YF0sXHJcbiAgICAgIH0pO1xyXG4gICAgfSxcclxuICB9KTtcclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIGNyZWF0ZU15UGxheWxpc3QsXHJcbiAgICBpc0NyZWF0aW5nLFxyXG4gIH07XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgdXNlUmVtb3ZlVHJhY2tGcm9tTXlQbGF5bGlzdCA9ICgpID0+IHtcclxuICBjb25zdCB7IGN1cnJlbnRVc2VyIH0gPSB1c2VDdXJyZW50VXNlcigpO1xyXG4gIGNvbnN0IHsgdXNlcklkIH0gPSBjdXJyZW50VXNlciB8fCB7fTtcclxuXHJcbiAgY29uc3QgW25vdGlmeV0gPSB1c2VOb3RpZmljYXRpb24oKTtcclxuXHJcbiAgY29uc3QgcXVlcnlDbGllbnQgPSB1c2VRdWVyeUNsaWVudCgpO1xyXG5cclxuICBjb25zdCB7IG11dGF0ZTogZGVsZXRlVHJhY2tGcm9tTXlQbGF5bGlzdCwgaXNQZW5kaW5nOiBpc1JlbW92aW5nIH0gPVxyXG4gICAgdXNlTXV0YXRpb24oe1xyXG4gICAgICBtdXRhdGlvbkZuOiBhc3luYyAoeyB0cmFja0QsIGlkIH0pID0+IHtcclxuICAgICAgICBpZiAodXNlcklkKSB7XHJcbiAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBhd2FpdCBmYlVwZGF0ZURvYyh7XHJcbiAgICAgICAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgICAgICAgdHJhY2tfaWRzOiBhcnJheVJlbW92ZSh0cmFja0QpLFxyXG4gICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgY29sbGVjdGlvbjogXCJteVBsYXlsaXN0c1wiLFxyXG4gICAgICAgICAgICAgIGlkLFxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIG5vdGlmeSh7XHJcbiAgICAgICAgICAgICAgdGl0bGU6IFwiU3VjY2Vzc1wiLFxyXG4gICAgICAgICAgICAgIHZhcmlhbnQ6IFwic3VjY2Vzc1wiLFxyXG4gICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIkRlbGV0ZWQgZnJvbSBwbGF5bGlzdFwiLFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICBub3RpZnkoe1xyXG4gICAgICAgICAgICAgIHRpdGxlOiBcIkVycm9yXCIsXHJcbiAgICAgICAgICAgICAgdmFyaWFudDogXCJlcnJvclwiLFxyXG4gICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIkFuIGVycm9yIG9jY3VycmVkIHdoaWxlIGRlbGV0aW5nXCIsXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhlcnJvcik7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgcGFyYW1zXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSxcclxuICAgICAgb25TdWNjZXNzOiAoXywgdmFyaWFibGVzKSA9PiB7XHJcbiAgICAgICAgcXVlcnlDbGllbnQuaW52YWxpZGF0ZVF1ZXJpZXMoe1xyXG4gICAgICAgICAgcXVlcnlLZXk6IFtgc2luZ2xlTXlQbGF5bGlzdF8ke3ZhcmlhYmxlcy5pZH1gXSxcclxuICAgICAgICB9KTtcclxuICAgICAgfSxcclxuICAgIH0pO1xyXG5cclxuICByZXR1cm4ge1xyXG4gICAgZGVsZXRlVHJhY2tGcm9tTXlQbGF5bGlzdCxcclxuICAgIGlzUmVtb3ZpbmcsXHJcbiAgfTtcclxufTtcclxuXHJcbi8vIGZhdm91cml0ZXMgcGxheWxpc3RzIENSVURcclxuXHJcbmV4cG9ydCBjb25zdCB1c2VTYXZlRmF2b3VyaXRlUGxheWxpc3QgPSAoKSA9PiB7XHJcbiAgY29uc3QgeyBjdXJyZW50VXNlciB9ID0gdXNlQ3VycmVudFVzZXIoKTtcclxuICBjb25zdCB7IHVzZXJJZCB9ID0gY3VycmVudFVzZXIgfHwge307XHJcblxyXG4gIGNvbnN0IHF1ZXJ5Q2xpZW50ID0gdXNlUXVlcnlDbGllbnQoKTtcclxuXHJcbiAgY29uc3QgW25vdGlmeV0gPSB1c2VOb3RpZmljYXRpb24oKTtcclxuXHJcbiAgY29uc3QgeyBtdXRhdGU6IHNhdmVGYXZvdXJpdGVQbGF5bGlzdCB9ID0gdXNlTXV0YXRpb24oe1xyXG4gICAgbXV0YXRpb25GbjogYXN5bmMgKHBsYXlsaXN0KSA9PiB7XHJcbiAgICAgIGlmICh1c2VySWQpIHtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgY29uc3QgZmF2b3VyaXRlUGxheWxpc3RzUmVmID0gYXdhaXQgZmJHZXREb2Moe1xyXG4gICAgICAgICAgICBjb2xsZWN0aW9uOiBcImZhdm91cml0ZVBsYXlsaXN0c1wiLFxyXG4gICAgICAgICAgICBpZDogdXNlcklkLFxyXG4gICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgaWYgKGZhdm91cml0ZVBsYXlsaXN0c1JlZi5leGlzdHMoKSkge1xyXG4gICAgICAgICAgICBjb25zdCB7IHBsYXlsaXN0X2lkcyB9ID0gZmF2b3VyaXRlUGxheWxpc3RzUmVmLmRhdGEoKSB8fCB7fTtcclxuXHJcbiAgICAgICAgICAgIGNvbnN0IG5vdEluQXJyYXkgPSBlbGVtZW50SW5BcnJheShwbGF5bGlzdF9pZHMsIHBsYXlsaXN0KTtcclxuXHJcbiAgICAgICAgICAgIGlmICghbm90SW5BcnJheSkge1xyXG4gICAgICAgICAgICAgIGNvbnN0IHBsYXlsaXN0SWRzRGF0YSA9IFtwbGF5bGlzdCwgLi4ucGxheWxpc3RfaWRzXS5zbGljZSgwLCAxMCk7XHJcblxyXG4gICAgICAgICAgICAgIGF3YWl0IGZiVXBkYXRlRG9jKHtcclxuICAgICAgICAgICAgICAgIGNvbGxlY3Rpb246IFwiZmF2b3VyaXRlUGxheWxpc3RzXCIsXHJcbiAgICAgICAgICAgICAgICBpZDogdXNlcklkLFxyXG4gICAgICAgICAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgICAgICAgICBwbGF5bGlzdF9pZHM6IHBsYXlsaXN0SWRzRGF0YSxcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGF3YWl0IGZiU2V0RG9jKHtcclxuICAgICAgICAgICAgICBjb2xsZWN0aW9uOiBcImZhdm91cml0ZVBsYXlsaXN0c1wiLFxyXG4gICAgICAgICAgICAgIGlkOiB1c2VySWQsXHJcbiAgICAgICAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgICAgICAgdXNlcl9pZDogdXNlcklkLFxyXG4gICAgICAgICAgICAgICAgcGxheWxpc3RfaWRzOiBhcnJheVVuaW9uKHBsYXlsaXN0KSxcclxuICAgICAgICAgICAgICAgIGNyZWF0ZWRfYXQ6IHNlcnZlclRpbWVzdGFtcCgpLFxyXG4gICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIG5vdGlmeSh7XHJcbiAgICAgICAgICAgIHRpdGxlOiBcIlN1Y2Nlc3NcIixcclxuICAgICAgICAgICAgdmFyaWFudDogXCJzdWNjZXNzXCIsXHJcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIkZhdm91cml0ZSBwbGF5bGlzdCBhZGRlZFwiLFxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGVycm9yKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgICBvblN1Y2Nlc3M6ICgpID0+IHtcclxuICAgICAgcXVlcnlDbGllbnQuaW52YWxpZGF0ZVF1ZXJpZXMoe1xyXG4gICAgICAgIHF1ZXJ5S2V5OiBbXCJsaXN0RmF2b3VyaXRlUGxheWxpc3RzXCJdLFxyXG4gICAgICB9KTtcclxuICAgICAgcXVlcnlDbGllbnQuaW52YWxpZGF0ZVF1ZXJpZXMoe1xyXG4gICAgICAgIHF1ZXJ5S2V5OiBbXCJmYXZvdXJpdGVQbGF5bGlzdHNcIl0sXHJcbiAgICAgIH0pO1xyXG4gICAgfSxcclxuICB9KTtcclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIHNhdmVGYXZvdXJpdGVQbGF5bGlzdCxcclxuICB9O1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHVzZUZldGNoRmF2b3VyaXRlUGxheWxpc3QgPSAoKSA9PiB7XHJcbiAgY29uc3QgeyBjdXJyZW50VXNlciB9ID0gdXNlQ3VycmVudFVzZXIoKTtcclxuICBjb25zdCB7IHVzZXJJZCB9ID0gY3VycmVudFVzZXIgfHwge307XHJcblxyXG4gIGNvbnN0IHsgaXNQZW5kaW5nLCBpc1N1Y2Nlc3MsIGlzRXJyb3IsIGlzRmV0Y2hpbmcsIGVycm9yLCBkYXRhIH0gPSB1c2VRdWVyeSh7XHJcbiAgICBxdWVyeUtleTogW1wiZmF2b3VyaXRlUGxheWxpc3RzXCIsIHsgdXNlcklkIH1dLFxyXG4gICAgcXVlcnlGbjogYXN5bmMgKCkgPT4ge1xyXG4gICAgICBpZiAodXNlcklkKSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgIGNvbnN0IGZhdlBsYXlsaXN0c1JlZiA9IGF3YWl0IGZiR2V0RG9jKHtcclxuICAgICAgICAgICAgY29sbGVjdGlvbjogXCJmYXZvdXJpdGVQbGF5bGlzdHNcIixcclxuICAgICAgICAgICAgaWQ6IHVzZXJJZCxcclxuICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgIGNvbnN0IHsgcGxheWxpc3RfaWRzIH0gPSBmYXZQbGF5bGlzdHNSZWY/LmRhdGEoKSB8fCB7fTtcclxuXHJcbiAgICAgICAgICBpZiAoZmF2UGxheWxpc3RzUmVmLmV4aXN0cygpICYmIHBsYXlsaXN0X2lkcz8ubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCBmZXRjaE11bHRpcGxlUGxheWxpc3RzKHBsYXlsaXN0X2lkcyk7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgLy8gY29uc29sZS5sb2coZXJyb3IpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHVzZXJJZFwiKTtcclxuICAgICAgfVxyXG4gICAgfSxcclxuICB9KTtcclxuXHJcbiAgcmV0dXJuIHsgaXNQZW5kaW5nLCBpc1N1Y2Nlc3MsIGlzRXJyb3IsIGlzRmV0Y2hpbmcsIGVycm9yLCBkYXRhIH07XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgdXNlTGlzdEZhdm91cml0ZVBsYXlsaXN0ID0gKCkgPT4ge1xyXG4gIGNvbnN0IHsgY3VycmVudFVzZXIgfSA9IHVzZUN1cnJlbnRVc2VyKCk7XHJcbiAgY29uc3QgeyB1c2VySWQgfSA9IGN1cnJlbnRVc2VyIHx8IHt9O1xyXG5cclxuICBjb25zdCB7IGlzUGVuZGluZywgaXNTdWNjZXNzLCBpc0Vycm9yLCBpc0ZldGNoaW5nLCBlcnJvciwgZGF0YSB9ID0gdXNlUXVlcnkoe1xyXG4gICAgcXVlcnlLZXk6IFtcImxpc3RGYXZvdXJpdGVQbGF5bGlzdHNcIiwgeyB1c2VySWQgfV0sXHJcbiAgICBxdWVyeUZuOiBhc3luYyAoKSA9PiB7XHJcbiAgICAgIGlmICh1c2VySWQpIHtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgY29uc3QgZmF2UGxheWxpc3RzUmVmID0gYXdhaXQgZmJHZXREb2Moe1xyXG4gICAgICAgICAgICBjb2xsZWN0aW9uOiBcImZhdm91cml0ZVBsYXlsaXN0c1wiLFxyXG4gICAgICAgICAgICBpZDogdXNlcklkLFxyXG4gICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgY29uc3QgaWQgPSBmYXZQbGF5bGlzdHNSZWY/LmlkO1xyXG4gICAgICAgICAgY29uc3QgeyBwbGF5bGlzdF9pZHMgfSA9IGZhdlBsYXlsaXN0c1JlZj8uZGF0YSgpIHx8IHt9O1xyXG5cclxuICAgICAgICAgIGNvbnN0IGZhdm91cml0ZXBsYXlsaXN0TGlzdCA9IHBsYXlsaXN0X2lkcz8ucmVkdWNlKChhY2MsIGl0ZW0pID0+IHtcclxuICAgICAgICAgICAgYWNjLnB1c2goT2JqZWN0LmtleXMoaXRlbSlbMF0pO1xyXG4gICAgICAgICAgICByZXR1cm4gYWNjO1xyXG4gICAgICAgICAgfSwgW10pO1xyXG5cclxuICAgICAgICAgIHJldHVybiB7IGZhdm91cml0ZXBsYXlsaXN0TGlzdCwgZmF2b3VyaXRlcGxheWxpc3RJZDogaWQgfTtcclxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgLy8gY29uc29sZS5sb2coZXJyb3IpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHVzZXJJZFwiKTtcclxuICAgICAgfVxyXG4gICAgfSxcclxuICB9KTtcclxuXHJcbiAgcmV0dXJuIHsgaXNQZW5kaW5nLCBpc1N1Y2Nlc3MsIGlzRXJyb3IsIGlzRmV0Y2hpbmcsIGVycm9yLCBkYXRhIH07XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgdXNlUmVtb3ZlRmF2b3VyaXRlUGxheWxpc3QgPSAoKSA9PiB7XHJcbiAgY29uc3QgeyBjdXJyZW50VXNlciB9ID0gdXNlQ3VycmVudFVzZXIoKTtcclxuICBjb25zdCB7IHVzZXJJZCB9ID0gY3VycmVudFVzZXIgfHwge307XHJcblxyXG4gIGNvbnN0IFtub3RpZnldID0gdXNlTm90aWZpY2F0aW9uKCk7XHJcblxyXG4gIGNvbnN0IHF1ZXJ5Q2xpZW50ID0gdXNlUXVlcnlDbGllbnQoKTtcclxuXHJcbiAgY29uc3QgeyBtdXRhdGU6IHJlbW92ZUZhdm91cml0ZVBsYXlsaXN0IH0gPSB1c2VNdXRhdGlvbih7XHJcbiAgICBtdXRhdGlvbkZuOiBhc3luYyAocGFyYW1zKSA9PiB7XHJcbiAgICAgIGNvbnN0IHsgcGxheWxpc3RELCBpZCB9ID0gcGFyYW1zO1xyXG4gICAgICBpZiAodXNlcklkKSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgIGF3YWl0IGZiVXBkYXRlRG9jKHtcclxuICAgICAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgICAgIHBsYXlsaXN0X2lkczogYXJyYXlSZW1vdmUocGxheWxpc3REKSxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgY29sbGVjdGlvbjogXCJmYXZvdXJpdGVQbGF5bGlzdHNcIixcclxuICAgICAgICAgICAgaWQsXHJcbiAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICBub3RpZnkoe1xyXG4gICAgICAgICAgICB0aXRsZTogXCJTdWNjZXNzXCIsXHJcbiAgICAgICAgICAgIHZhcmlhbnQ6IFwic3VjY2Vzc1wiLFxyXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJGYXZvdXJpdGUgcGxheWxpc3QgcmVtb3ZlZFwiLFxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgIG5vdGlmeSh7XHJcbiAgICAgICAgICAgIHRpdGxlOiBcIkVycm9yXCIsXHJcbiAgICAgICAgICAgIHZhcmlhbnQ6IFwiZXJyb3JcIixcclxuICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiQW4gZXJyb3Igb2NjdXJyZWQgd2hpbGUgZGVsZXRpbmdcIixcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgLy8gY29uc29sZS5sb2coZXJyb3IpXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAgb25TdWNjZXNzOiAoKSA9PiB7XHJcbiAgICAgIHF1ZXJ5Q2xpZW50LmludmFsaWRhdGVRdWVyaWVzKHtcclxuICAgICAgICBxdWVyeUtleTogW1wibGlzdEZhdm91cml0ZVBsYXlsaXN0c1wiXSxcclxuICAgICAgfSk7XHJcbiAgICAgIHF1ZXJ5Q2xpZW50LmludmFsaWRhdGVRdWVyaWVzKHtcclxuICAgICAgICBxdWVyeUtleTogW1wiZmF2b3VyaXRlUGxheWxpc3RzXCJdLFxyXG4gICAgICB9KTtcclxuICAgIH0sXHJcbiAgfSk7XHJcblxyXG4gIHJldHVybiB7IHJlbW92ZUZhdm91cml0ZVBsYXlsaXN0IH07XHJcbn07XHJcbiJdLCJuYW1lcyI6WyJ1c2VOYXZpZ2F0ZSIsInY0IiwidXVpZHY0IiwidXNlTXV0YXRpb24iLCJ1c2VRdWVyeSIsInVzZVF1ZXJ5Q2xpZW50IiwiYXJyYXlSZW1vdmUiLCJhcnJheVVuaW9uIiwic2VydmVyVGltZXN0YW1wIiwidXNlQ3VycmVudFVzZXIiLCJlbGVtZW50SW5BcnJheSIsImZiU2V0RG9jIiwiZmJBZGREb2MiLCJmYkdldERvYyIsImZiVXBkYXRlRG9jIiwiZmJEZWxldGVEb2MiLCJmYkdldENvbGxlY3Rpb24iLCJmYkNvdW50Q29sbGVjdGlvbiIsInVwbG9hZEltYWdlIiwiZmJEZWxldGVTdG9yYWdlIiwidXNlUm91dGVyIiwidXNlTm90aWZpY2F0aW9uIiwiZmV0Y2hNdWx0aXBsZVBsYXlsaXN0cyIsInVzZVNhdmVSZWNlbnRQbGF5ZWQiLCJxdWVyeUNsaWVudCIsIm11dGF0ZSIsInNhdmVSZWNlbnRQbGF5ZWQiLCJtdXRhdGlvbkZuIiwicGxheWxpc3QiLCJ1c2VySWQiLCJyZWNlbnRQbGF5ZWRSZWYiLCJjb2xsZWN0aW9uIiwiaWQiLCJleGlzdHMiLCJwbGF5bGlzdF9pZHMiLCJkYXRhIiwibm90SW5BcnJheSIsInBsYXlsaXN0SWRzRGF0YSIsInNsaWNlIiwidXNlcl9pZCIsImNyZWF0ZWRfYXQiLCJlcnJvciIsIkVycm9yIiwib25TdWNjZXNzIiwiaW52YWxpZGF0ZVF1ZXJpZXMiLCJxdWVyeUtleSIsInVzZUZldGNoUmVjZW50UGxheWVkIiwiY3VycmVudFVzZXIiLCJpc1BlbmRpbmciLCJpc1N1Y2Nlc3MiLCJpc0Vycm9yIiwiaXNGZXRjaGluZyIsInF1ZXJ5Rm4iLCJ1c2VGZXRjaE15UGxheWxpc3RzIiwibmF2aWdhdGUiLCJteVBsYXlsaXN0c1JlZiIsIndoZXJlUXVlcmllcyIsIm9yZGVyQnlRdWVyaWVzIiwiZG9jcyIsIm1hcCIsImkiLCJzIiwidG9EYXRlIiwidXNlQ3JlYXRlTXlQbGF5bGlzdCIsIm5vdGlmeSIsImNyZWF0ZU15UGxheWxpc3QiLCJpc0NyZWF0aW5nIiwiY291bnRNeVBsYXlsaXN0IiwiZG9jUmVmIiwiZGVzYyIsInRpdGxlIiwidHJhY2tfaWRzIiwiaW1hZ2VfdXJsIiwidmFyaWFudCIsImRlc2NyaXB0aW9uIiwidXNlRmV0Y2hNeVBsYXlsaXN0Iiwic2luZ2xlUGxheWxpc3QiLCJwbGF5bGlzdERldGFpbHMiLCJsZW5ndGgiLCJ0cmFja3MiLCJwbGF5bGlzdFRyYWNrcyIsInVzZUVkaXRNeVBsYXlsaXN0IiwiZWRpdE15UGxheWxpc3QiLCJpc0VkaXRpbmciLCJpc0VkaXRlZCIsInZhbHVlcyIsImZpbGVzIiwiaW1hZ2VQYXRoIiwiaW1hZ2VVcmwiLCJwYXRoVXJsIiwiaW1hZ2VGaWxlIiwic3RvcmFnZVBhdGgiLCJmaWxlTmFtZSIsImltYWdlX3BhdGgiLCJfIiwidmFyaWFibGVzIiwidXNlUmVtb3ZlTXlQbGF5bGlzdCIsImRlbGV0ZU15UGxheWxpc3QiLCJpc1JlbW92aW5nIiwiZmlsZVBhdGgiLCJ1c2VBZGRUcmFja1RvTXlQbGF5bGlzdCIsInRyYWNrRCIsImFkZFRyYWNrUmVmIiwidHJhY2tJZHNEYXRhIiwidXNlUmVtb3ZlVHJhY2tGcm9tTXlQbGF5bGlzdCIsImRlbGV0ZVRyYWNrRnJvbU15UGxheWxpc3QiLCJ1c2VTYXZlRmF2b3VyaXRlUGxheWxpc3QiLCJzYXZlRmF2b3VyaXRlUGxheWxpc3QiLCJmYXZvdXJpdGVQbGF5bGlzdHNSZWYiLCJ1c2VGZXRjaEZhdm91cml0ZVBsYXlsaXN0IiwiZmF2UGxheWxpc3RzUmVmIiwidXNlTGlzdEZhdm91cml0ZVBsYXlsaXN0IiwiZmF2b3VyaXRlcGxheWxpc3RMaXN0IiwicmVkdWNlIiwiYWNjIiwiaXRlbSIsInB1c2giLCJPYmplY3QiLCJrZXlzIiwiZmF2b3VyaXRlcGxheWxpc3RJZCIsInVzZVJlbW92ZUZhdm91cml0ZVBsYXlsaXN0IiwicmVtb3ZlRmF2b3VyaXRlUGxheWxpc3QiLCJwYXJhbXMiLCJwbGF5bGlzdEQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/lib/actions/playlist.action.js\n"));

/***/ })

});