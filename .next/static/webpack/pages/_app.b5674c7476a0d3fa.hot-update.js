"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/lib/actions/playlist.action.js":
/*!********************************************!*\
  !*** ./src/lib/actions/playlist.action.js ***!
  \********************************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAddTrackToMyPlaylist: function() { return /* binding */ useAddTrackToMyPlaylist; },\n/* harmony export */   useCreateMyPlaylist: function() { return /* binding */ useCreateMyPlaylist; },\n/* harmony export */   useEditMyPlaylist: function() { return /* binding */ useEditMyPlaylist; },\n/* harmony export */   useFetchFavouritePlaylist: function() { return /* binding */ useFetchFavouritePlaylist; },\n/* harmony export */   useFetchMyPlaylist: function() { return /* binding */ useFetchMyPlaylist; },\n/* harmony export */   useFetchMyPlaylists: function() { return /* binding */ useFetchMyPlaylists; },\n/* harmony export */   useFetchRecentPlayed: function() { return /* binding */ useFetchRecentPlayed; },\n/* harmony export */   useListFavouritePlaylist: function() { return /* binding */ useListFavouritePlaylist; },\n/* harmony export */   useRemoveFavouritePlaylist: function() { return /* binding */ useRemoveFavouritePlaylist; },\n/* harmony export */   useRemoveMyPlaylist: function() { return /* binding */ useRemoveMyPlaylist; },\n/* harmony export */   useRemoveTrackFromMyPlaylist: function() { return /* binding */ useRemoveTrackFromMyPlaylist; },\n/* harmony export */   useSaveFavouritePlaylist: function() { return /* binding */ useSaveFavouritePlaylist; },\n/* harmony export */   useSaveRecentPlayed: function() { return /* binding */ useSaveRecentPlayed; }\n/* harmony export */ });\n/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react-router-dom */ \"./node_modules/react-router-dom/dist/index.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! uuid */ \"./node_modules/uuid/dist/esm-browser/index.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @tanstack/react-query */ \"./node_modules/@tanstack/react-query/build/modern/index.js\");\n/* harmony import */ var _firebase_firestore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/firestore */ \"./node_modules/@firebase/firestore/dist/index.esm2017.js\");\n/* harmony import */ var _lib_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/store */ \"./src/lib/store.js\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../lib/utils */ \"./src/lib/utils.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../lib/helpers */ \"./src/lib/helpers.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../hooks */ \"./src/hooks/index.js\");\n/* harmony import */ var _editorial_action__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./editorial.action */ \"./src/lib/actions/editorial.action.js\");\n/* eslint-disable react-hooks/exhaustive-deps */ /* eslint-disable react-hooks/rules-of-hooks */ var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$(), _s5 = $RefreshSig$(), _s6 = $RefreshSig$(), _s7 = $RefreshSig$(), _s8 = $RefreshSig$(), _s9 = $RefreshSig$(), _s10 = $RefreshSig$(), _s11 = $RefreshSig$(), _s12 = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n// recent played\nconst useSaveRecentPlayed = ()=>{\n    _s();\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient)();\n    const { mutate: saveRecentPlayed } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation)({\n        mutationFn: async (playlist)=>{\n            if (userId) {\n                try {\n                    const recentPlayedRef = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbGetDoc)({\n                        collection: \"recentPlayed\",\n                        id: userId\n                    });\n                    if (recentPlayedRef.exists()) {\n                        const { playlist_ids } = recentPlayedRef.data() || {};\n                        const notInArray = (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.elementInArray)(playlist_ids, playlist);\n                        if (!notInArray) {\n                            const playlistIdsData = [\n                                playlist,\n                                ...playlist_ids\n                            ].slice(0, 6);\n                            await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbUpdateDoc)({\n                                collection: \"recentPlayed\",\n                                id: userId,\n                                data: {\n                                    playlist_ids: playlistIdsData\n                                }\n                            });\n                        }\n                    } else {\n                        await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbSetDoc)({\n                            collection: \"recentPlayed\",\n                            id: userId,\n                            data: {\n                                user_id: userId,\n                                playlist_ids: (0,_firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.arrayUnion)(playlist),\n                                created_at: (0,_firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)()\n                            }\n                        });\n                    }\n                } catch (error) {\n                // console.log(error);\n                }\n            } else {\n                throw new Error(\"invalid params\");\n            }\n        },\n        onSuccess: ()=>{\n            queryClient.invalidateQueries({\n                queryKey: [\n                    \"recentPlayed\"\n                ]\n            });\n        }\n    });\n    return {\n        saveRecentPlayed\n    };\n};\n_s(useSaveRecentPlayed, \"Z0OMtHhAP/kxsKesxPRZVrQlTs8=\", false, function() {\n    return [\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation\n    ];\n});\nconst useFetchRecentPlayed = ()=>{\n    _s1();\n    const { currentUser } = (0,_lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser)();\n    const { userId: userId1 } = currentUser || {};\n    const { isPending, isSuccess, isError, isFetching, error, data } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQuery)({\n        queryKey: [\n            \"recentPlayed\",\n            {\n                userId: userId1\n            }\n        ],\n        queryFn: async ()=>{\n            if (userId1) {\n                try {\n                    const recentPlayedRef = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbGetDoc)({\n                        collection: \"recentPlayed\",\n                        id: userId1\n                    });\n                    if (recentPlayedRef.exists()) {\n                        const data = recentPlayedRef.data().playlist_ids;\n                        return await (0,_editorial_action__WEBPACK_IMPORTED_MODULE_6__.fetchMultiplePlaylists)(data);\n                    } else {\n                        return null;\n                    }\n                } catch (error) {\n                // console.log(error);\n                }\n            } else {\n                return null;\n            // throw new Error(\"Invalid userId\");\n            }\n        }\n    });\n    return {\n        isPending,\n        isSuccess,\n        isError,\n        isFetching,\n        error,\n        data\n    };\n};\n_s1(useFetchRecentPlayed, \"4lOyKRJjeHYU6OlXBQ+5LHv3laA=\", false, function() {\n    return [\n        _lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQuery\n    ];\n});\n// fetch playlists\nconst useFetchMyPlaylists = ()=>{\n    _s2();\n    const { currentUser } = (0,_lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser)();\n    const { userId: userId1 } = currentUser || {};\n    const navigate = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_8__.useNavigate)();\n    const { isPending, isSuccess, isError, isFetching, error, data } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQuery)({\n        queryKey: [\n            \"myPlaylists\",\n            {\n                userId: userId1,\n                navigate\n            }\n        ],\n        queryFn: async ()=>{\n            if (userId1) {\n                try {\n                    const myPlaylistsRef = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbGetCollection)({\n                        collection: \"myPlaylists\",\n                        whereQueries: [\n                            [\n                                \"user_id\",\n                                \"==\",\n                                userId1\n                            ]\n                        ],\n                        orderByQueries: [\n                            [\n                                \"created_at\",\n                                \"desc\"\n                            ]\n                        ]\n                    });\n                    return myPlaylistsRef.docs.map((i)=>{\n                        const s = i.data();\n                        return {\n                            ...s,\n                            id: i.id,\n                            created_at: s.created_at.toDate()\n                        };\n                    });\n                } catch (error) {\n                    navigate(\"/\");\n                // console.log(error);\n                }\n            } else {\n                return null;\n            // throw new Error(\"invalid params\");\n            }\n        }\n    });\n    return {\n        isPending,\n        isSuccess,\n        isError,\n        isFetching,\n        error,\n        data\n    };\n};\n_s2(useFetchMyPlaylists, \"qbC+6j7wuDz6DbKwEqphuKrSTNI=\", false, function() {\n    return [\n        _lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser,\n        react_router_dom__WEBPACK_IMPORTED_MODULE_8__.useNavigate,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQuery\n    ];\n});\n// playlist CRUD\nconst useCreateMyPlaylist = ()=>{\n    _s3();\n    const { currentUser } = (0,_lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser)();\n    const { userId: userId1 } = currentUser || {};\n    const navigate = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_8__.useNavigate)();\n    const [notify] = (0,_hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification)();\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient)();\n    const { mutate: createMyPlaylist, isPending: isCreating } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation)({\n        mutationFn: async ()=>{\n            if (userId1) {\n                try {\n                    const countMyPlaylist = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbCountCollection)({\n                        collection: \"myPlaylists\",\n                        whereQueries: [\n                            [\n                                \"user_id\",\n                                \"==\",\n                                userId1\n                            ]\n                        ]\n                    });\n                    const docRef = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbAddDoc)({\n                        collection: \"myPlaylists\",\n                        data: {\n                            user_id: userId1,\n                            desc: \"Here is an optional description\",\n                            title: \"My Playlist #\".concat(countMyPlaylist + 1),\n                            track_ids: [],\n                            image_url: null,\n                            created_at: (0,_firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)()\n                        }\n                    });\n                    navigate(\"/my-playlist/\".concat(docRef.id));\n                } catch (error) {\n                    notify({\n                        title: \"Error\",\n                        variant: \"error\",\n                        description: \"Request failed\"\n                    });\n                // console.log(error);\n                }\n            } else {\n                throw new Error(\"Invalid params\");\n            }\n        },\n        onSuccess: ()=>{\n            queryClient.invalidateQueries({\n                queryKey: [\n                    \"myPlaylists\"\n                ]\n            });\n        }\n    });\n    return {\n        createMyPlaylist,\n        isCreating\n    };\n};\n_s3(useCreateMyPlaylist, \"SkWtxqx9iopboob3xnKt7Sj63bk=\", false, function() {\n    return [\n        _lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser,\n        react_router_dom__WEBPACK_IMPORTED_MODULE_8__.useNavigate,\n        _hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation\n    ];\n});\nconst useFetchMyPlaylist = (id)=>{\n    _s4();\n    const { currentUser } = (0,_lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser)();\n    const { userId: userId1 } = currentUser || {};\n    const [notify] = (0,_hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification)();\n    // const navigate = useNavigate();\n    const { isPending, isSuccess, isError, isFetching, error, data } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQuery)({\n        queryKey: [\n            \"singleMyPlaylist_\".concat(id),\n            {\n                userId: userId1,\n                id\n            }\n        ],\n        queryFn: async ()=>{\n            if (userId1) {\n                try {\n                    const singlePlaylist = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbGetDoc)({\n                        collection: \"myPlaylists\",\n                        id\n                    });\n                    const { track_ids } = singlePlaylist.data() || {};\n                    let playlistDetails = singlePlaylist.data();\n                    playlistDetails = {\n                        ...playlistDetails,\n                        id: singlePlaylist.id,\n                        created_at: playlistDetails.created_at.toDate()\n                    };\n                    if (track_ids === null || track_ids === void 0 ? void 0 : track_ids.length) {\n                        const tracks = await (0,_editorial_action__WEBPACK_IMPORTED_MODULE_6__.fetchMultiplePlaylists)(track_ids);\n                        return {\n                            playlistDetails,\n                            playlistTracks: tracks\n                        };\n                    } else {\n                        return {\n                            playlistDetails,\n                            playlistTracks: []\n                        };\n                    }\n                } catch (error) {\n                    notify({\n                        title: \"Error\",\n                        variant: \"error\",\n                        description: \"Request failed\"\n                    });\n                // navigate(\"/\");\n                // console.log(error);\n                }\n            } else {\n                throw new Error(\"Invalid params\");\n            }\n        }\n    });\n    return {\n        isPending,\n        isSuccess,\n        isError,\n        isFetching,\n        error,\n        data\n    };\n};\n_s4(useFetchMyPlaylist, \"ansTaF3w1zVEQRWUXTHkvxq/RUI=\", false, function() {\n    return [\n        _lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser,\n        _hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQuery\n    ];\n});\nconst useEditMyPlaylist = ()=>{\n    _s5();\n    const { currentUser } = (0,_lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser)();\n    const { userId: userId1 } = currentUser || {};\n    const [notify] = (0,_hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification)();\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient)();\n    const { mutate: editMyPlaylist, isPending: isEditing, isSuccess: isEdited } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation)({\n        mutationFn: async (values)=>{\n            const { id, title, desc, files, imagePath } = values;\n            if (userId1) {\n                try {\n                    let imageUrl = null;\n                    let pathUrl = null;\n                    if (files) {\n                        pathUrl = imagePath || (0,uuid__WEBPACK_IMPORTED_MODULE_9__.v4)();\n                        imageUrl = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.uploadImage)({\n                            imageFile: files[0],\n                            storagePath: \"myPlaylists/\".concat(pathUrl),\n                            fileName: \"image.jpg\"\n                        });\n                    }\n                    await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbUpdateDoc)({\n                        data: {\n                            title,\n                            desc,\n                            ...files ? {\n                                image_url: imageUrl,\n                                image_path: pathUrl\n                            } : {}\n                        },\n                        collection: \"myPlaylists\",\n                        id\n                    });\n                    notify({\n                        title: \"Success\",\n                        variant: \"success\",\n                        description: \"Details successfully edited\"\n                    });\n                } catch (error) {\n                    notify({\n                        title: \"Error\",\n                        variant: \"error\",\n                        description: \"Request failed\"\n                    });\n                }\n            } else {\n                throw new Error(\"invalid params\");\n            }\n        },\n        onSuccess: (_, variables)=>{\n            queryClient.invalidateQueries({\n                queryKey: [\n                    \"singleMyPlaylist_\".concat(variables === null || variables === void 0 ? void 0 : variables.id)\n                ]\n            });\n        }\n    });\n    return {\n        editMyPlaylist,\n        isEditing,\n        isEdited\n    };\n};\n_s5(useEditMyPlaylist, \"MnF8UeuZXhysTWWF2N5ql2kmaAI=\", false, function() {\n    return [\n        _lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser,\n        _hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation\n    ];\n});\nconst useRemoveMyPlaylist = ()=>{\n    _s6();\n    const { currentUser } = (0,_lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser)();\n    const { userId: userId1 } = currentUser || {};\n    //const navigate = useNavigate();\n    const [notify] = (0,_hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification)();\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient)();\n    const { mutate: deleteMyPlaylist, isPending: isRemoving } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation)({\n        mutationFn: async (id)=>{\n            if (userId1) {\n                try {\n                    var _playlist_data;\n                    const playlist = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbGetDoc)({\n                        collection: \"myPlaylists\",\n                        id\n                    });\n                    const filePath = playlist === null || playlist === void 0 ? void 0 : (_playlist_data = playlist.data()) === null || _playlist_data === void 0 ? void 0 : _playlist_data.image_path;\n                    await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbDeleteDoc)({\n                        collection: \"myPlaylists\",\n                        id\n                    });\n                    if (filePath) {\n                        await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbDeleteStorage)(\"myPlaylists/\".concat(filePath, \"/image.jpg\"));\n                    }\n                    // navigate(\"/my-playlist\");\n                    notify({\n                        title: \"Success\",\n                        variant: \"success\",\n                        description: \"Deleted from playlist\"\n                    });\n                    return null;\n                } catch (error) {\n                    notify({\n                        title: \"Error\",\n                        variant: \"error\",\n                        description: \"An error occurred while deleting\"\n                    });\n                // console.log(error);\n                }\n            } else {\n                throw new Error(\"invalid error\");\n            }\n        },\n        onSuccess: ()=>{\n            queryClient.invalidateQueries({\n                queryKey: [\n                    \"myPlaylists\"\n                ]\n            });\n        }\n    });\n    return {\n        deleteMyPlaylist,\n        isRemoving\n    };\n};\n_s6(useRemoveMyPlaylist, \"iXk9TXuEn4RP/9mZm2ahMrHWIB8=\", false, function() {\n    return [\n        _lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser,\n        _hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation\n    ];\n});\n// add/remove tracks to/from a playlist\nconst useAddTrackToMyPlaylist = ()=>{\n    _s7();\n    const { currentUser } = (0,_lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser)();\n    const { userId: userId1 } = currentUser || {};\n    const [notify] = (0,_hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification)();\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient)();\n    const { mutate: createMyPlaylist, isPending: isCreating } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation)({\n        mutationFn: async (param)=>{\n            let { trackD, id, imageUrl } = param;\n            if (userId1) {\n                try {\n                    const addTrackRef = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbGetDoc)({\n                        collection: \"myPlaylists\",\n                        id\n                    });\n                    if (addTrackRef.exists()) {\n                        const { track_ids, image_url } = addTrackRef.data();\n                        const notInArray = (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.elementInArray)(track_ids, trackD);\n                        if (!notInArray) {\n                            const trackIdsData = [\n                                trackD,\n                                ...track_ids\n                            ].slice(0, 10);\n                            await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbUpdateDoc)({\n                                data: {\n                                    track_ids: trackIdsData,\n                                    image_url: image_url || imageUrl\n                                },\n                                collection: \"myPlaylists\",\n                                id\n                            });\n                            notify({\n                                title: \"Success\",\n                                variant: \"success\",\n                                description: \"Added to playlist\"\n                            });\n                        }\n                    }\n                } catch (error) {\n                    notify({\n                        title: \"Error\",\n                        variant: \"error\",\n                        description: \"An error occurred while adding\"\n                    });\n                // console.log(error);\n                }\n            }\n        },\n        onSuccess: (_, variables)=>{\n            queryClient.invalidateQueries({\n                queryKey: [\n                    \"singleMyPlaylist_\".concat(variables.id)\n                ]\n            });\n        }\n    });\n    return {\n        createMyPlaylist,\n        isCreating\n    };\n};\n_s7(useAddTrackToMyPlaylist, \"EERodkJi/2kjAbV4zm5S+md54Y8=\", false, function() {\n    return [\n        _lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser,\n        _hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation\n    ];\n});\nconst useRemoveTrackFromMyPlaylist = ()=>{\n    _s8();\n    const { currentUser } = (0,_lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser)();\n    const { userId: userId1 } = currentUser || {};\n    const [notify] = (0,_hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification)();\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient)();\n    const { mutate: deleteTrackFromMyPlaylist, isPending: isRemoving } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation)({\n        mutationFn: async (param)=>{\n            let { trackD, id } = param;\n            if (userId1) {\n                try {\n                    await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbUpdateDoc)({\n                        data: {\n                            track_ids: (0,_firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.arrayRemove)(trackD)\n                        },\n                        collection: \"myPlaylists\",\n                        id\n                    });\n                    notify({\n                        title: \"Success\",\n                        variant: \"success\",\n                        description: \"Deleted from playlist\"\n                    });\n                    return null;\n                } catch (error) {\n                    notify({\n                        title: \"Error\",\n                        variant: \"error\",\n                        description: \"An error occurred while deleting\"\n                    });\n                // console.log(error);\n                }\n            } else {\n                throw new Error(\"Invalid params\");\n            }\n        },\n        onSuccess: (_, variables)=>{\n            queryClient.invalidateQueries({\n                queryKey: [\n                    \"singleMyPlaylist_\".concat(variables.id)\n                ]\n            });\n        }\n    });\n    return {\n        deleteTrackFromMyPlaylist,\n        isRemoving\n    };\n};\n_s8(useRemoveTrackFromMyPlaylist, \"uj/JmGvXmJw/LUdvyQLawvRX73w=\", false, function() {\n    return [\n        _lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser,\n        _hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation\n    ];\n});\n// favourites playlists CRUD\nconst useSaveFavouritePlaylist = ()=>{\n    _s9();\n    const { currentUser } = (0,_lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser)();\n    const { userId: userId1 } = currentUser || {};\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient)();\n    const [notify] = (0,_hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification)();\n    const { mutate: saveFavouritePlaylist } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation)({\n        mutationFn: async (playlist)=>{\n            if (userId1) {\n                try {\n                    const favouritePlaylistsRef = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbGetDoc)({\n                        collection: \"favouritePlaylists\",\n                        id: userId1\n                    });\n                    if (favouritePlaylistsRef.exists()) {\n                        const { playlist_ids } = favouritePlaylistsRef.data() || {};\n                        const notInArray = (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.elementInArray)(playlist_ids, playlist);\n                        if (!notInArray) {\n                            const playlistIdsData = [\n                                playlist,\n                                ...playlist_ids\n                            ].slice(0, 10);\n                            await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbUpdateDoc)({\n                                collection: \"favouritePlaylists\",\n                                id: userId1,\n                                data: {\n                                    playlist_ids: playlistIdsData\n                                }\n                            });\n                        }\n                    } else {\n                        await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbSetDoc)({\n                            collection: \"favouritePlaylists\",\n                            id: userId1,\n                            data: {\n                                user_id: userId1,\n                                playlist_ids: (0,_firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.arrayUnion)(playlist),\n                                created_at: (0,_firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)()\n                            }\n                        });\n                    }\n                    notify({\n                        title: \"Success\",\n                        variant: \"success\",\n                        description: \"Favourite playlist added\"\n                    });\n                } catch (error) {\n                // console.log(error);\n                }\n            }\n        },\n        onSuccess: ()=>{\n            queryClient.invalidateQueries({\n                queryKey: [\n                    \"listFavouritePlaylists\"\n                ]\n            });\n            queryClient.invalidateQueries({\n                queryKey: [\n                    \"favouritePlaylists\"\n                ]\n            });\n        }\n    });\n    return {\n        saveFavouritePlaylist\n    };\n};\n_s9(useSaveFavouritePlaylist, \"7mzlyLG+5Ka47Dsb2hyQZZ8LTkc=\", false, function() {\n    return [\n        _lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient,\n        _hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation\n    ];\n});\nconst useFetchFavouritePlaylist = ()=>{\n    _s10();\n    const { currentUser } = (0,_lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser)();\n    const { userId: userId1 } = currentUser || {};\n    const { isPending, isSuccess, isError, isFetching, error, data } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQuery)({\n        queryKey: [\n            \"favouritePlaylists\",\n            {\n                userId: userId1\n            }\n        ],\n        queryFn: async ()=>{\n            if (userId1) {\n                try {\n                    const favPlaylistsRef = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbGetDoc)({\n                        collection: \"favouritePlaylists\",\n                        id: userId1\n                    });\n                    const { playlist_ids } = (favPlaylistsRef === null || favPlaylistsRef === void 0 ? void 0 : favPlaylistsRef.data()) || {};\n                    if (favPlaylistsRef.exists() && (playlist_ids === null || playlist_ids === void 0 ? void 0 : playlist_ids.length)) {\n                        return await (0,_editorial_action__WEBPACK_IMPORTED_MODULE_6__.fetchMultiplePlaylists)(playlist_ids);\n                    } else {\n                        return null;\n                    }\n                } catch (error) {\n                // console.log(error);\n                }\n            } else {\n                throw new Error(\"Invalid userId\");\n            }\n        }\n    });\n    return {\n        isPending,\n        isSuccess,\n        isError,\n        isFetching,\n        error,\n        data\n    };\n};\n_s10(useFetchFavouritePlaylist, \"4lOyKRJjeHYU6OlXBQ+5LHv3laA=\", false, function() {\n    return [\n        _lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQuery\n    ];\n});\nconst useListFavouritePlaylist = ()=>{\n    _s11();\n    const { currentUser } = (0,_lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser)();\n    const { userId: userId1 } = currentUser || {};\n    const { isPending, isSuccess, isError, isFetching, error, data } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQuery)({\n        queryKey: [\n            \"listFavouritePlaylists\",\n            {\n                userId: userId1\n            }\n        ],\n        queryFn: async ()=>{\n            if (userId1) {\n                try {\n                    const favPlaylistsRef = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbGetDoc)({\n                        collection: \"favouritePlaylists\",\n                        id: userId1\n                    });\n                    const id = favPlaylistsRef === null || favPlaylistsRef === void 0 ? void 0 : favPlaylistsRef.id;\n                    const { playlist_ids } = (favPlaylistsRef === null || favPlaylistsRef === void 0 ? void 0 : favPlaylistsRef.data()) || {};\n                    const favouriteplaylistList = playlist_ids === null || playlist_ids === void 0 ? void 0 : playlist_ids.reduce((acc, item)=>{\n                        acc.push(Object.keys(item)[0]);\n                        return acc;\n                    }, []);\n                    return {\n                        favouriteplaylistList,\n                        favouriteplaylistId: id\n                    };\n                } catch (error) {\n                // console.log(error);\n                }\n            } else {\n                throw new Error(\"Invalid userId\");\n            }\n        }\n    });\n    return {\n        isPending,\n        isSuccess,\n        isError,\n        isFetching,\n        error,\n        data\n    };\n};\n_s11(useListFavouritePlaylist, \"4lOyKRJjeHYU6OlXBQ+5LHv3laA=\", false, function() {\n    return [\n        _lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQuery\n    ];\n});\nconst useRemoveFavouritePlaylist = ()=>{\n    _s12();\n    const { currentUser } = (0,_lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser)();\n    const { userId: userId1 } = currentUser || {};\n    const [notify] = (0,_hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification)();\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient)();\n    const { mutate: removeFavouritePlaylist } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation)({\n        mutationFn: async (params)=>{\n            const { playlistD, id } = params;\n            if (userId1) {\n                try {\n                    await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.fbUpdateDoc)({\n                        data: {\n                            playlist_ids: (0,_firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.arrayRemove)(playlistD)\n                        },\n                        collection: \"favouritePlaylists\",\n                        id\n                    });\n                    notify({\n                        title: \"Success\",\n                        variant: \"success\",\n                        description: \"Favourite playlist removed\"\n                    });\n                } catch (error) {\n                    notify({\n                        title: \"Error\",\n                        variant: \"error\",\n                        description: \"An error occurred while deleting\"\n                    });\n                // console.log(error)\n                }\n            }\n        },\n        onSuccess: ()=>{\n            queryClient.invalidateQueries({\n                queryKey: [\n                    \"listFavouritePlaylists\"\n                ]\n            });\n            queryClient.invalidateQueries({\n                queryKey: [\n                    \"favouritePlaylists\"\n                ]\n            });\n        }\n    });\n    return {\n        removeFavouritePlaylist\n    };\n};\n_s12(useRemoveFavouritePlaylist, \"Dny8in924+/X5c1GLAxlXqpMgg4=\", false, function() {\n    return [\n        _lib_store__WEBPACK_IMPORTED_MODULE_1__.useCurrentUser,\n        _hooks__WEBPACK_IMPORTED_MODULE_5__.useNotification,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useQueryClient,\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_7__.useMutation\n    ];\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = __webpack_module__.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                __webpack_module__.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                __webpack_module__.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        __webpack_module__.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    __webpack_module__.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/lib/actions/playlist.action.js\n"));

/***/ })

});